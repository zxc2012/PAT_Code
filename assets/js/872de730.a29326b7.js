"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[4718],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>d});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),o=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=o(t.components);return n.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),c=o(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return a?n.createElement(k,i(i({ref:e},m),{},{components:a})):n.createElement(k,i({ref:e},m))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4562:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var n=a(7462),r=(a(7294),a(3905));const l={},i="Java Application Design--Class",p={unversionedId:"C++/Java_class",id:"C++/Java_class",title:"Java Application Design--Class",description:"Primitive Data Types",source:"@site/docs/C++/Java_class.md",sourceDirName:"C++",slug:"/C++/Java_class",permalink:"/docs/C++/Java_class",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/C++/Java_class.md",tags:[],version:"current",frontMatter:{},sidebar:"C",next:{title:"Java Application Design--Containers",permalink:"/docs/C++/Java_containers"}},s={},o=[{value:"Primitive Data Types",id:"primitive-data-types",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Operator precedence",id:"operator-precedence",level:3},{value:"Pass by value",id:"pass-by-value",level:3},{value:"Class",id:"class",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Visibility Modifiers",id:"visibility-modifiers",level:3},{value:"Cleanup:finalize()",id:"cleanupfinalize",level:3},{value:"Order of Initialization",id:"order-of-initialization",level:3},{value:"Inheritance &amp; Polymorphism",id:"inheritance--polymorphism",level:2},{value:"Inheritance",id:"inheritance",level:3},{value:"Polymorphism",id:"polymorphism",level:3},{value:"Abstract Classes &amp; Interfaces",id:"abstract-classes--interfaces",level:2},{value:"Abstract Class",id:"abstract-class",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Object Class",id:"object-class",level:2},{value:"Other Class",id:"other-class",level:2},{value:"Scanner Class",id:"scanner-class",level:3},{value:"Array Class",id:"array-class",level:3},{value:"String Class",id:"string-class",level:3}],m={toc:o};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"java-application-design--class"},"Java Application Design--Class"),(0,r.kt)("h2",{id:"primitive-data-types"},"Primitive Data Types"),(0,r.kt)("p",null,"C++(ILP32:int long pointer)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Storage(bits)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"short"),(0,r.kt)("td",{parentName:"tr",align:null},"16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"long long"),(0,r.kt)("td",{parentName:"tr",align:null},"64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"64")))),(0,r.kt)("p",null,"Java"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Storage(bits)"),(0,r.kt)("th",{parentName:"tr",align:null},"Min Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Max Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"byte"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"-128"),(0,r.kt)("td",{parentName:"tr",align:null},"127")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"short"),(0,r.kt)("td",{parentName:"tr",align:null},"16"),(0,r.kt)("td",{parentName:"tr",align:null},"$-2^{15}$"),(0,r.kt)("td",{parentName:"tr",align:null},"$2^{15}-1$")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"16"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"$2^{16}-1$")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"32"),(0,r.kt)("td",{parentName:"tr",align:null},"$-2^{31}$"),(0,r.kt)("td",{parentName:"tr",align:null},"$2^{31}-1$")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"64"),(0,r.kt)("td",{parentName:"tr",align:null},"$-2^{63}$"),(0,r.kt)("td",{parentName:"tr",align:null},"$2^{63}-1$")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"32"),(0,r.kt)("td",{parentName:"tr",align:null},"Approximately-3.4e+38 with 7 significant digits"),(0,r.kt)("td",{parentName:"tr",align:null},"Approximately3.4e+38 with 7 significant digits")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"64"),(0,r.kt)("td",{parentName:"tr",align:null},"Approximately-1.7e+308 with 15 significant digits"),(0,r.kt)("td",{parentName:"tr",align:null},"Approximately-1.7e+308 with 15 significant digits")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/20201013163013271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"vs"})),(0,r.kt)("h3",{id:"initialization"},"Initialization"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Data Field",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"null for a reference type"),(0,r.kt)("li",{parentName:"ul"},"0 for a numeric type"),(0,r.kt)("li",{parentName:"ul"},"false for a boolean type"),(0,r.kt)("li",{parentName:"ul"},"'\\u0000' for a char type"))),(0,r.kt)("li",{parentName:"ul"},"no default value to a local\nvariable")),(0,r.kt)("h3",{id:"operator-precedence"},"Operator precedence"),(0,r.kt)("p",null,"\u5355\u7b97\u79fb\u5173\u4e0e\uff0c\u5f02\u6216\u903b\u6761\u8d4b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5355\u8868\u793a\u5355\u76ee\u8fd0\u7b97\u7b26\uff1a\u903b\u8f91\u975e(!),\u6309\u4f4d\u53d6\u53cd(~),\u81ea\u589e(++),\u81ea\u51cf(--),\u53d6\u5730\u5740(&),\u53d6\u503c(","*",")"),(0,r.kt)("li",{parentName:"ul"},"\u7b97\u8868\u793a\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a\u4e58\u3001\u9664\u548c\u6c42\u4f59(","*",",/,%)\u7ea7\u522b\u9ad8\u4e8e\u52a0\u51cf(+,-)"),(0,r.kt)("li",{parentName:"ul"},"\u79fb\u8868\u793a\u6309\u4f4d\u5de6\u79fb(<<)\u548c\u4f4d\u53f3\u79fb(>>)"),(0,r.kt)("li",{parentName:"ul"},"\u5173\u8868\u793a\u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a\u5927\u5c0f\u5173\u7cfb(>,>=,<,<=)\u7ea7\u522b\u9ad8\u4e8e\u76f8\u7b49\u4e0d\u76f8\u7b49\u5173\u7cfb(==,!=)"),(0,r.kt)("li",{parentName:"ul"},"\u4e0e\u8868\u793a\u6309\u4f4d\u4e0e(&)"),(0,r.kt)("li",{parentName:"ul"},"\u5f02\u8868\u793a\u6309\u4f4d\u5f02\u6216(^)"),(0,r.kt)("li",{parentName:"ul"},"\u6216\u8868\u793a\u6309\u4f4d\u6216(|)"),(0,r.kt)("li",{parentName:"ul"},"\u903b\u8868\u793a\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a\u903b\u8f91\u4e0e(&&)\u7ea7\u522b\u9ad8\u4e8e\u903b\u8f91\u6216(||)"),(0,r.kt)("li",{parentName:"ul"},"\u6761\u8868\u793a\u6761\u4ef6\u8fd0\u7b97\u7b26(? :)"),(0,r.kt)("li",{parentName:"ul"},"\u8d4b\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26(=,+=,-=,","*","=,/=,%=,>>=,<<=,&=,^=, |=,!=)")),(0,r.kt)("h3",{id:"pass-by-value"},"Pass by value"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For a parameter of a ",(0,r.kt)("strong",{parentName:"p"},"primitive")," type, the actual value is passed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For a parameter of an ",(0,r.kt)("strong",{parentName:"p"},"array")," type, the reference value is passed"))),(0,r.kt)("h2",{id:"class"},"Class"),(0,r.kt)("h3",{id:"constructor"},"Constructor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Constructors must have the same name as the\nclass itself"),(0,r.kt)("li",{parentName:"ul"},"A constructor with no parameters is referred to as\na no-arg constructor(",(0,r.kt)("em",{parentName:"li"},"default"),": no-arg constructor with an\nempty body)"),(0,r.kt)("li",{parentName:"ul"},"Constructors do not have a return type(Not even void)")),(0,r.kt)("h3",{id:"visibility-modifiers"},"Visibility Modifiers"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"public"),(0,r.kt)("td",{parentName:"tr",align:null},"The class, data, or method is visible to any class in any package")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"(default)"),(0,r.kt)("td",{parentName:"tr",align:null},"the class, variable, or method can be accessed by any class in the same package")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"private"),(0,r.kt)("td",{parentName:"tr",align:null},"Modifier cannot be applied to a class, only its members/The data or methods can be accessed only by the declaring class")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"protected"),(0,r.kt)("td",{parentName:"tr",align:null},"Used in inheritance")))),(0,r.kt)("h3",{id:"cleanupfinalize"},"Cleanup:finalize()"),(0,r.kt)("p",null,"When the garbage collector is ready to release the storage used for your object,it will first call its ",(0,r.kt)("strong",{parentName:"p"},"finalize()"),"\nBut ",(0,r.kt)("strong",{parentName:"p"},"finalize()")," is totally different from destructor of C++:"),(0,r.kt)("h3",{id:"order-of-initialization"},"Order of Initialization"),(0,r.kt)("p",null,"1.Staic members is to be initialized in the loading of the class,\u5c5e\u4e8e\u7c7b\u7684\u6570\u636e(C++\u5168\u5c40)"),(0,r.kt)("p",null,"2.When a new object is create,\u987a\u5e8f:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allocate enough storage for an object on the heap."),(0,r.kt)("li",{parentName:"ul"},"Setting ",(0,r.kt)("strong",{parentName:"li"},"all")," the primitives in the object to their default values.(Any initializations that occur at the point of field definition are executed.)"),(0,r.kt)("li",{parentName:"ul"},"Constructors are executed.")),(0,r.kt)("h2",{id:"inheritance--polymorphism"},"Inheritance & Polymorphism"),(0,r.kt)("h3",{id:"inheritance"},"Inheritance"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"super"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"constructor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"superclass method"),(0,r.kt)("p",{parentName:"li"},"super.method(arguments);"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"private\u3001static method cannot be overriden"),"(If a static method defined in the superclass is\nredefined in a subclass, the method defined\nin the superclass is hidden)"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Overriding")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Have the same signature"),(0,r.kt)("li",{parentName:"ul"},"Are in different classes related by inheritance")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Overloading")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Have the same name, but different parameter lists"),(0,r.kt)("li",{parentName:"ul"},"Can be either",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In the same class"),(0,r.kt)("li",{parentName:"ul"},"In different classes related by inheritance")))),(0,r.kt)("p",null,"Eg:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"System.out.println(true?Integer.valueOf(1):Double.valueOf(2))\n//\u8f93\u51fa1.0,\u56e0\u4e3ajava\u662f\u7f16\u8bd1\u8bed\u8a00\u4e0d\u662f\u89e3\u91ca\u8bed\u8a00\uff0c\u7f16\u8bd1\u5668\u770b\u5230\u51fd\u6570\u8c03\u7528\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\n//\u800c\u662f\u6839\u636edouble\u786e\u5b9aprintln overload\u4e3adouble\u7c7b\u578b\n")),(0,r.kt)("h3",{id:"polymorphism"},"Polymorphism"),(0,r.kt)("p",null,"The compiler chooses the most specific matching method signature from the static type of the invoking class"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Static Type: type specified at declaration"),(0,r.kt)("li",{parentName:"ul"},"Dynamic Type: type specified at instantiation(the object being pointed at)"),(0,r.kt)("li",{parentName:"ul"},"dynamic method selection: if dynamic type ",(0,r.kt)("strong",{parentName:"li"},"overide"),"s the method, its method is used instead.")),(0,r.kt)("p",null,"Casting Problem:"),(0,r.kt)("p",null,"(\u8054\u60f3\u96c6\u5408)To move from a wider type to a narrower type, ",(0,r.kt)("strong",{parentName:"p"},"must")," use casting\n",(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211230194803.png",alt:"20211230194803"})),(0,r.kt)("h2",{id:"abstract-classes--interfaces"},"Abstract Classes & Interfaces"),(0,r.kt)("h3",{id:"abstract-class"},"Abstract Class"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Abstract method(only a signature without implementationv)"),(0,r.kt)("li",{parentName:"ul"},"Abstract class as a data type")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"GeometricObject[] objects = new GeometricObject[2];\n")),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"public: can be used in any package(All method declarations in an interface, including default methods, are implicitly public, so you can omit the public modifier.)"),(0,r.kt)("li",{parentName:"ul"},"default: no need to override in subclass")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public interface A {\n  public default void doSomething() {\n    System.out.println("Do something");\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211125105220.png",alt:"20211125105220"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211125105246.png",alt:"20211125105246"})),(0,r.kt)("h2",{id:"object-class"},"Object Class"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Interpretion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"public boolean equals(Object w)"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"public String toString()"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"public final Class getClass()"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"protected Object clone()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5bf9\u8c61\u7684\u4e00\u4e2a\u526f\u672c")))),(0,r.kt)("h2",{id:"other-class"},"Other Class"),(0,r.kt)("h3",{id:"scanner-class"},"Scanner Class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Scanner input = new Scanner(System.in);\nint value = input.nextInt();\n// nextByte() reads an integer of the byte type.\n// nextShort() reads an integer of the short type.\n// nextInt() reads an integer of the int type.\n// nextLong() reads an integer of the long type.\n// nextFloat() reads a number of the float type.\n// nextDouble() reads a number of the double type.\n")),(0,r.kt)("h3",{id:"array-class"},"Array Class"),(0,r.kt)("p",null,"get length: array.length(",(0,r.kt)("em",{parentName:"p"},"variable"),")"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/***Creation****/\nint[] A = new int[4]; // A points to array of 4 0s.\nint[] B; // Same thing, but in two steps.\nB = new int[4];\nint[] C = new int[] { 1, 2, 3, 4 }\n// Array with explicit initial values.\nint[] D = { 1, 2, 3, 4 } // Shorthand for the above\n/***Method******/\npublic static <T> void sort(T[] a,\n            int fromIndex,\n            int toIndex,\n            Comparator<? super T> c)\npublic static boolean equals(Object[] a,\n             Object[] a2)//Returns true if the two specified arrays of Objects are equal to one another.\npublic static void fill(Object[] a,\n        int fromIndex,\n        int toIndex,\n        Object val)\n")),(0,r.kt)("p",null,"Lambda Expression"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A comma-separated list of formal parameters enclosed in parentheses(Optional type declaration)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The arrow token, ->")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A body, which consists of a single expression or a statement block."))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220112194646.png",alt:"20220112194646"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//\u4e00\u4e2a\u53c2\u6570\u65f6()\u53ef\u7701\u7565\n(param1, param2, \u2026, paramN) -> { statements }\n(param1, param2, \u2026, paramN) -> expression\n//\u76f8\u5f53\u4e8e\uff1a(param1, param2, \u2026, paramN) ->{ return expression; }\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211004215118.png",alt:"20211004215118"})),(0,r.kt)("h3",{id:"string-class"},"String Class"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"length()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the number of characters in this string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"charAt(index)"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the character at the specified index from this string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"concat(s1)"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a new string that concatenates this string with string s1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"toUpperCase()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a new string with all letters in uppercase.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"toLowerCase()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a new string with all letters in lowercase.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"trim()"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a new string with whitespace characters trimmed on both sides.")))))}u.isMDXComponent=!0}}]);