"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[337],{724:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=i(7462),l=(i(7294),i(3905));i(1839);const a={},r="6 Tree and Graph",s={unversionedId:"Algorithms/6",id:"Algorithms/6",title:"6 Tree and Graph",description:"Tree",source:"@site/docs/Algorithms/6.md",sourceDirName:"Algorithms",slug:"/Algorithms/6",permalink:"/docs/Algorithms/6",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/Algorithms/6.md",tags:[],version:"current",frontMatter:{},sidebar:"Algorithms",previous:{title:"5 Searching summary",permalink:"/docs/Algorithms/5"},next:{title:"7 DP summary",permalink:"/docs/Algorithms/7"}},d={},p=[{value:"Tree",id:"tree",level:2},{value:"1.\u6811\u7684\u641c\u7d22",id:"1\u6811\u7684\u641c\u7d22",level:3},{value:"\u601d\u8def1:bfs(\u8981\u5efa\u6811\u7684\u6570\u636e\u7ed3\u6784)",id:"\u601d\u8def1bfs\u8981\u5efa\u6811\u7684\u6570\u636e\u7ed3\u6784",level:5},{value:"\u601d\u8def2:dfs(\u8981Node\u7ed3\u6784\u4f53)",id:"\u601d\u8def2dfs\u8981node\u7ed3\u6784\u4f53",level:5},{value:"2.\u7a7a\u95f4\u95ee\u9898",id:"2\u7a7a\u95f4\u95ee\u9898",level:3},{value:"\u65b9\u6cd51:vector.resize(k)+vector\u672c\u8eab\u4e5f\u53ef\u4ee5\u7528\u4e0b\u6807(\u221a)",id:"\u65b9\u6cd51vectorresizekvector\u672c\u8eab\u4e5f\u53ef\u4ee5\u7528\u4e0b\u6807",level:5},{value:"\u65b9\u6cd52:int child100+int k=0;",id:"\u65b9\u6cd52int-child100int-k0",level:5},{value:"3.\u67e5\u627evector\u4e2d\u67d0\u503c\u7684lower uper",id:"3\u67e5\u627evector\u4e2d\u67d0\u503c\u7684lower-uper",level:3},{value:"4.Node\u5f62\u53c2\u95ee\u9898-&gt;\u6bb5\u9519\u8bef\u63a2\u8ba8",id:"4node\u5f62\u53c2\u95ee\u9898-\u6bb5\u9519\u8bef\u63a2\u8ba8",level:3},{value:"\u2f24\u6570\u7ec4\u5728main\u51fd\u6570\u2fa5\u2faf\u7684\u8bdd\u662f\u5b58\u50a8\u5728\u6808\u2fa5\uff0c\u2f7d\u6808\u7a7a\u95f4\u662f\u5728\u8fdb\u7a0b\u521b\u5efa\u65f6\u521d\u59cb\u5316\uff0c\u6709\u56fa\u5b9a\u7684\u2f24\u2f29\uff0c\u2f00\u822c\u4e3a\u2f0f\u2f17KB\uff0c\u6240\u4ee5\u592a\u2f24\u7684\u6570\u7ec4\u4f1a\u8017\u5149\u6808\u7a7a\u95f4\u3002\u2f7d\u5168\u5c40\u53d8\u91cf\u5360\u2f64\u7684\u5806\u7a7a\u95f4\uff0c\u5806\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u662f\u6309\u9700\u5206\u914d\uff0c\u2f83\u7531\u589e\u2ed3\u7684\uff0c\u53ef\u4ee5\u2fae\u5e38\u2f24\uff0c\u2f50\u598232\u4f4d\u7684\u7cfb\u7edf\u4e2d\u53ef\u4ee5\u2f24\u52304GB\u3002\u5c06\u2f24\u6570\u7ec4\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\u80fd\u907f\u514d\u6808\u6ea2\u51fa",id:"\u6570\u7ec4\u5728main\u51fd\u6570\u7684\u8bdd\u662f\u5b58\u50a8\u5728\u6808\u6808\u7a7a\u95f4\u662f\u5728\u8fdb\u7a0b\u521b\u5efa\u65f6\u521d\u59cb\u5316\u6709\u56fa\u5b9a\u7684\u822c\u4e3akb\u6240\u4ee5\u592a\u7684\u6570\u7ec4\u4f1a\u8017\u5149\u6808\u7a7a\u95f4\u5168\u5c40\u53d8\u91cf\u5360\u7684\u5806\u7a7a\u95f4\u5806\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u662f\u6309\u9700\u5206\u914d\u7531\u589e\u7684\u53ef\u4ee5\u5e38\u598232\u4f4d\u7684\u7cfb\u7edf\u4e2d\u53ef\u4ee5\u52304gb\u5c06\u6570\u7ec4\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\u80fd\u907f\u514d\u6808\u6ea2\u51fa",level:5},{value:"5.Disjoint Sets",id:"5disjoint-sets",level:3},{value:"Graph",id:"graph",level:2},{value:"1.\u6570\u8fde\u901a\u5206\u91cf(Disjoint Sets)",id:"1\u6570\u8fde\u901a\u5206\u91cfdisjoint-sets",level:3},{value:"<code>\u5f53\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u53ca\u5176\u76f8\u5173\u7684\u8fb9\u4e4b\u540e\uff0c\u8ba1\u7b97\u51fa\u5269\u4e0b\u7684\u56fe\u7684\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u589e\u52a0\u7684\u8fb9\u5c31\u5e94\u8be5\u662f\u6c42\u51fa\u7684\u8fde\u901a\u5206\u91cf-1</code>",id:"\u5f53\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u53ca\u5176\u76f8\u5173\u7684\u8fb9\u4e4b\u540e\u8ba1\u7b97\u51fa\u5269\u4e0b\u7684\u56fe\u7684\u8fde\u901a\u5206\u91cf\u90a3\u4e48\u589e\u52a0\u7684\u8fb9\u5c31\u5e94\u8be5\u662f\u6c42\u51fa\u7684\u8fde\u901a\u5206\u91cf-1",level:5},{value:"\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5c06\u77f3\u5934\u653e\u7f6e\u5728\u4e00\u4e9b\u6574\u6570\u5750\u6807\u70b9\u4e0a\u3002\u6bcf\u4e2a\u5750\u6807\u70b9\u4e0a\u6700\u591a\u53ea\u80fd\u6709\u4e00\u5757\u77f3\u5934\u3002\u73b0\u5728\uff0c\u4e00\u4e2amove\u5c06\u4f1a\u79fb\u9664\u4e0e\u7f51\u683c\u4e0a\u7684\u53e6\u4e00\u5757\u77f3\u5934\u5171\u4eab\u4e00\u5217\u6216\u4e00\u884c\u7684\u4e00\u4e2a\u77f3\u5934\u3002",id:"\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5c06\u77f3\u5934\u653e\u7f6e\u5728\u4e00\u4e9b\u6574\u6570\u5750\u6807\u70b9\u4e0a\u6bcf\u4e2a\u5750\u6807\u70b9\u4e0a\u6700\u591a\u53ea\u80fd\u6709\u4e00\u5757\u77f3\u5934\u73b0\u5728\u4e00\u4e2amove\u5c06\u4f1a\u79fb\u9664\u4e0e\u7f51\u683c\u4e0a\u7684\u53e6\u4e00\u5757\u77f3\u5934\u5171\u4eab\u4e00\u5217\u6216\u4e00\u884c\u7684\u4e00\u4e2a\u77f3\u5934",level:5},{value:"2.\u6709\u5173\u662f\u5bf9\u8fb9dfs\u8fd8\u662f\u70b9dfs",id:"2\u6709\u5173\u662f\u5bf9\u8fb9dfs\u8fd8\u662f\u70b9dfs",level:3},{value:"\u7ed9\u51fa\u591a\u4e2a\u4eba\u4e4b\u95f4\u7684\u901a\u8bdd\u957f\u5ea6\uff0c\u6309\u7167\u8fd9\u4e9b\u901a\u8bdd\u5c06\u4ed6\u4eec\u5206\u6210\u82e5\u5e72\u4e2a\u7ec4\uff0c\u5404\u4e2a\u7ec4\u7684\u603b\u6743\u503c\u662f\u8be5\u7ec4\u5185\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\uff0c\u6bcf\u4e2a\u4eba\u7684\u6743\u503c\u662f\u5176\u53c2\u4e0e\u7684\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u3002\u6c42\u7ec4\u6570\u548c\u7ec4\u5185\u901a\u8bdd\u6700\u957f\u7684",id:"\u7ed9\u51fa\u591a\u4e2a\u4eba\u4e4b\u95f4\u7684\u901a\u8bdd\u957f\u5ea6\u6309\u7167\u8fd9\u4e9b\u901a\u8bdd\u5c06\u4ed6\u4eec\u5206\u6210\u82e5\u5e72\u4e2a\u7ec4\u5404\u4e2a\u7ec4\u7684\u603b\u6743\u503c\u662f\u8be5\u7ec4\u5185\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u6bcf\u4e2a\u4eba\u7684\u6743\u503c\u662f\u5176\u53c2\u4e0e\u7684\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u6c42\u7ec4\u6570\u548c\u7ec4\u5185\u901a\u8bdd\u6700\u957f\u7684",level:5},{value:"\u7535\u4fe1\u8bc8\u9a97\u5224\u65ad\u5acc\u7591\u72af,\u82e5\u72af\u4eba\u4e4b\u95f4\u901a\u8fc7\u8bdd\u8bf4\u660e\u662f\u4e00\u4e2a\u56e2\u4f19",id:"\u7535\u4fe1\u8bc8\u9a97\u5224\u65ad\u5acc\u7591\u72af\u82e5\u72af\u4eba\u4e4b\u95f4\u901a\u8fc7\u8bdd\u8bf4\u660e\u662f\u4e00\u4e2a\u56e2\u4f19",level:5},{value:"\u7ed9\u5b9aN\u4e2a\u7ed3\u70b9\u548cN-1\u6761\u8fb9\uff0c\u95ee\u80fd\u5426\u6784\u6210\u4e00\u68f5\u6811\uff0c\u5982\u679c\u80fd\uff0c\u5219\u8f93\u51fa\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\u65f6\u4f7f\u5f97\u6574\u68f5\u6811\u6df1\u5ea6\u6700\u5927\u7684\u7ed3\u70b9\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8f93\u51fa\u8fd9\u4e2a\u56fe\u4e2d\u6709\u51e0\u4e2a\u8fde\u901a\u5206\u91cf\u3002",id:"\u7ed9\u5b9an\u4e2a\u7ed3\u70b9\u548cn-1\u6761\u8fb9\u95ee\u80fd\u5426\u6784\u6210\u4e00\u68f5\u6811\u5982\u679c\u80fd\u5219\u8f93\u51fa\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\u65f6\u4f7f\u5f97\u6574\u68f5\u6811\u6df1\u5ea6\u6700\u5927\u7684\u7ed3\u70b9\u5982\u679c\u4e0d\u80fd\u8f93\u51fa\u8fd9\u4e2a\u56fe\u4e2d\u6709\u51e0\u4e2a\u8fde\u901a\u5206\u91cf",level:5},{value:"3.Hamiltonian Cycle",id:"3hamiltonian-cycle",level:3},{value:"4.dfs\u7ed3\u6784\u603b\u7ed3",id:"4dfs\u7ed3\u6784\u603b\u7ed3",level:3}],o={toc:p};function c(n){let{components:e,...i}=n;return(0,l.kt)("wrapper",(0,t.Z)({},o,i,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"6-tree-and-graph"},"6 Tree and Graph"),(0,l.kt)("h2",{id:"tree"},"Tree"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"1\u6811\u7684\u641c\u7d22"},"1.\u6811\u7684\u641c\u7d22"),(0,l.kt)("p",null,"order traverse"),(0,l.kt)("h5",{id:"\u601d\u8def1bfs\u8981\u5efa\u6811\u7684\u6570\u636e\u7ed3\u6784"},"\u601d\u8def1:bfs(\u8981\u5efa\u6811\u7684\u6570\u636e\u7ed3\u6784)"),(0,l.kt)("h5",{id:"\u601d\u8def2dfs\u8981node\u7ed3\u6784\u4f53"},"\u601d\u8def2:dfs(\u8981Node\u7ed3\u6784\u4f53)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct sq {\n    int index;\n    int data;\n};\nvoid order(int i,int j) {\n    if (node[i].lchild != -1) {\n        level.push_back({2 * j,node[i].lchild});\n        order(node[i].lchild,2 * j);\n    }\n    in.push_back(i);\n    if (node[i].rchild != -1) {\n        level.push_back({2 * j+1,node[i].rchild});\n        order(node[i].rchild,2 * j+1);\n    }\n\n}\nbool cmp(sq a,sq b) {\n    return a.index<b.index;\n}\n")),(0,l.kt)("p",null,"\u641c\u7b26\u5408\u8981\u6c42\u8def\u5f84(\u4e0d\u9700\u8981Node\u7ed3\u6784\u4f53)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"const int maxn = 1010;\nvector<int> g[maxn];//\u5df2\u77e5\u7ed3\u70b9\u5173\u7cfb\nvoid dfs(int x, int dp) {//depth\u8fd0\u7528\n    path[depth] = w[x];\n    if (g[x].size() == 0) {\n        ll temp = 0;\n        for (int i = 0; i <= depth; i++) temp += path[i];\n        if (temp == s) {\n            for (int i = 0; i <= depth; i++) ans[len].push_back(path[i]);\n            len++;\n        }\n        return;\n    }\n    for (int i = 0; i < g[x].size(); i++) {\n        dfs(g[x][i], dp + 1);\n    }\n}\n")),(0,l.kt)("h3",{id:"2\u7a7a\u95f4\u95ee\u9898"},"2.\u7a7a\u95f4\u95ee\u9898"),(0,l.kt)("h5",{id:"\u65b9\u6cd51vectorresizekvector\u672c\u8eab\u4e5f\u53ef\u4ee5\u7528\u4e0b\u6807"},"\u65b9\u6cd51:vector.resize(k)+vector\u672c\u8eab\u4e5f\u53ef\u4ee5\u7528\u4e0b\u6807(\u221a)"),(0,l.kt)("h5",{id:"\u65b9\u6cd52int-child100int-k0"},"\u65b9\u6cd52:int child","[100]","+int k=0;"),(0,l.kt)("h3",{id:"3\u67e5\u627evector\u4e2d\u67d0\u503c\u7684lower-uper"},"3.\u67e5\u627evector\u4e2d\u67d0\u503c\u7684lower uper"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PAT1043")),(0,l.kt)("p",null,"\u8bd5\u6bd4\u8f83\u4ee5\u4e0b\u548cfor\u5faa\u73af+i--,\u4f1a\u6709for\u7b2c\u4e00\u503c\u9000\u51fa\u65f6\u591a\u51cf\u4e86\n\u82e5\u662f\u9012\u589e\u5e8f\u5217\uff0c\u4e0d\u5982\u76f4\u63a5\u627e\u6bd4\u4ed6\u5c0f\u7684\u4e0b\u4e00\u4e2a\uff0c\u6bd4\u4ed6\u5927\u7684\u4e0a\u4e00\u4e2a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"if(!isMirror) {\n    while(i <= tail && pre[root] > pre[i]) i++;\n    while(j > root && pre[root] <= pre[j]) j--;\n} else {\n    while(i <= tail && pre[root] <= pre[i]) i++;\n    while(j > root && pre[root] > pre[j]) j--;\n}\n")),(0,l.kt)("h3",{id:"4node\u5f62\u53c2\u95ee\u9898-\u6bb5\u9519\u8bef\u63a2\u8ba8"},"4.Node\u5f62\u53c2\u95ee\u9898->\u6bb5\u9519\u8bef\u63a2\u8ba8"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Node {\n    vector<int> child;\n    double sp = 0;\n};\nvoid dfs(int x,int dp) {\n    int i;\n    if(v[x].child.size()!=0) {\n        for (i = 0; i<v[x].child.size(); ++i) \n        if (dp+1 > pw.size()-1)\n            pw.push_back(pow(r, dp+1));\n            dfs(v[x].child[i],dp+1);\n    } \n    else sum += 1.0*v[x].sp*p*pw[dp];\n}\n")),(0,l.kt)("p",null,"\u5982\u679c\u5c06dfs\u7b2c\u4e00\u4e2a\u53c2\u6570\u5199\u4e3aNode x\u4f1a\u7206\u7a7a\u95f4,\u66f4\u4e0d\u8c08\u5b58\u51e0\u4e2adouble\u4e86,\u76f4\u63a5\u7528\u8282\u70b9\u56fe\u6216\u8005\u5c42\u5206\u5e03\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void dfs(int x, int depth) {\n    if (g[x].size() == 0) {\n        ans += (dat[x] * pow(1 + r, depth));\n        return;\n    }\n    for (int i = 0; i < g[x].size(); i++) {\n        dfs(g[x][i], depth + 1);\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"\u6bb5\u9519\u8bef\u603b\u7ed3:"))),(0,l.kt)("p",null,"(1)\u8d8a\u754c\u8bbf\u95ee"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6570\u7ec4\u5f00\u5c0f\u4e86\u5bfc\u81f4\u6307\u9488\u6307\u5411\u4e86\u4e3a\u5f00\u8f9f\u7684\u6570\u7ec4\u533a\u57df\uff0c\u51fa\u73b0\u4e86\u8d8a\u754c\u8bbf\u95ee\u591a\u5c42"),(0,l.kt)("li",{parentName:"ul"},"for\u5faa\u73af\u4e2d\u5185\u5c42\u5faa\u73af\u672c\u6765\u6253\u7b97\u5199j\u6216\u8005k\uff0c\u5374\u56e0\u4e3a\u4e60\u60ef\u6216\u5fd8\u8bb0\u8bef\u5199\u6210\u4e86\u5916\u5c42\u5faa\u73af\u7684\u53d8\u91cfi\u6216j\uff0c\u5bfc\u81f4\u6570\u7ec4\u8bbf\u95eei\u6216j\u4e0b\u6807\u7684\u65f6\u5019\u53d1\u2f63\u4e86\u8d8a\u754c"),(0,l.kt)("li",{parentName:"ul"},"\u4e24\u6b21\u81ea\u589e\u7684\u987a\u5e8fand\u53cc\u91cd[]\u6570\u7ec4",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"--each[s[start]];\n++start;\n")))),(0,l.kt)("p",null,"(2)\u6808\u7a7a\u95f4\u548c\u5806\u7a7a\u95f4"),(0,l.kt)("h5",{id:"\u6570\u7ec4\u5728main\u51fd\u6570\u7684\u8bdd\u662f\u5b58\u50a8\u5728\u6808\u6808\u7a7a\u95f4\u662f\u5728\u8fdb\u7a0b\u521b\u5efa\u65f6\u521d\u59cb\u5316\u6709\u56fa\u5b9a\u7684\u822c\u4e3akb\u6240\u4ee5\u592a\u7684\u6570\u7ec4\u4f1a\u8017\u5149\u6808\u7a7a\u95f4\u5168\u5c40\u53d8\u91cf\u5360\u7684\u5806\u7a7a\u95f4\u5806\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u662f\u6309\u9700\u5206\u914d\u7531\u589e\u7684\u53ef\u4ee5\u5e38\u598232\u4f4d\u7684\u7cfb\u7edf\u4e2d\u53ef\u4ee5\u52304gb\u5c06\u6570\u7ec4\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\u80fd\u907f\u514d\u6808\u6ea2\u51fa"},"\u2f24\u6570\u7ec4\u5728main\u51fd\u6570\u2fa5\u2faf\u7684\u8bdd\u662f\u5b58\u50a8\u5728\u6808\u2fa5\uff0c\u2f7d\u6808\u7a7a\u95f4\u662f\u5728\u8fdb\u7a0b\u521b\u5efa\u65f6\u521d\u59cb\u5316\uff0c\u6709\u56fa\u5b9a\u7684\u2f24\u2f29\uff0c\u2f00\u822c\u4e3a\u2f0f\u2f17KB\uff0c\u6240\u4ee5\u592a\u2f24\u7684\u6570\u7ec4\u4f1a\u8017\u5149\u6808\u7a7a\u95f4\u3002\u2f7d\u5168\u5c40\u53d8\u91cf\u5360\u2f64\u7684\u5806\u7a7a\u95f4\uff0c\u5806\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u662f\u6309\u9700\u5206\u914d\uff0c\u2f83\u7531\u589e\u2ed3\u7684\uff0c\u53ef\u4ee5\u2fae\u5e38\u2f24\uff0c\u2f50\u598232\u4f4d\u7684\u7cfb\u7edf\u4e2d\u53ef\u4ee5\u2f24\u52304GB\u3002\u5c06\u2f24\u6570\u7ec4\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\u80fd\u907f\u514d\u6808\u6ea2\u51fa"),(0,l.kt)("p",null,"(3)\u6811 null->data,null->left,null->right"),(0,l.kt)("h3",{id:"5disjoint-sets"},"5.Disjoint Sets"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int findf(int v){\n    if(v!=father[v])\n        father[v]=findf(father[v]);//\u6ce8\u610f\u70b9\n    return father[v];\n}\nvoid uni(int a,int b){\n    int fa = findf(a);\n    int fb = findf(b);\n    if(fa!=fb)\n        father[fa] = fb;\n}\n")),(0,l.kt)("h2",{id:"graph"},"Graph"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"1\u6570\u8fde\u901a\u5206\u91cfdisjoint-sets"},"1.\u6570\u8fde\u901a\u5206\u91cf(Disjoint Sets)"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PAT1013 Battle Over Cities")),(0,l.kt)("h5",{id:"\u5f53\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u53ca\u5176\u76f8\u5173\u7684\u8fb9\u4e4b\u540e\u8ba1\u7b97\u51fa\u5269\u4e0b\u7684\u56fe\u7684\u8fde\u901a\u5206\u91cf\u90a3\u4e48\u589e\u52a0\u7684\u8fb9\u5c31\u5e94\u8be5\u662f\u6c42\u51fa\u7684\u8fde\u901a\u5206\u91cf-1"},(0,l.kt)("inlineCode",{parentName:"h5"},"\u5f53\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u53ca\u5176\u76f8\u5173\u7684\u8fb9\u4e4b\u540e\uff0c\u8ba1\u7b97\u51fa\u5269\u4e0b\u7684\u56fe\u7684\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u589e\u52a0\u7684\u8fb9\u5c31\u5e94\u8be5\u662f\u6c42\u51fa\u7684\u8fde\u901a\u5206\u91cf-1")),(0,l.kt)("p",null,"\u6cd51:\u6bcf\u6b21dfs\u524d\u5224\u65advisit","[i]","==0;"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'void dfs(int s) {\n    visit[s] = 1;\n    for(int i = 1; i<=n; ++i)\n    if(g[s][i]==1&&visit[i]==0)dfs(i);\n}\n...main:\nfor (i = 0; i < k; ++i) {\n    sum = 0;cin >> m;\n    fill(visit.begin(),visit.end(),0);\n    visit[m] = 1;\n    for (j = 1; j<=n; ++j)\n        if (visit[j] == 0){dfs(j);sum++;}\n    printf("%d\\n", sum-1);\n}\n')),(0,l.kt)("p",null,"\u6cd52:\u6570\u6839\u7ed3\u70b9father","[v]","==v;"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'while(K--){\n    int v;int num=0;\n    scanf("%d",&v);\n    iota(father,father+N+1,0);//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n    for(int i=1;i<N+1;++i)\n        if(i!=v)for(int j:graph[i])\n            if(j!=v)uni(i,j);\n    for(int i=1;i<=N;++i)\n        if(i!=v&&father[i]==i)\n            ++num;\n    printf("%d\\n",num-1);\n}\n')),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Leetcode947")),(0,l.kt)("h5",{id:"\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5c06\u77f3\u5934\u653e\u7f6e\u5728\u4e00\u4e9b\u6574\u6570\u5750\u6807\u70b9\u4e0a\u6bcf\u4e2a\u5750\u6807\u70b9\u4e0a\u6700\u591a\u53ea\u80fd\u6709\u4e00\u5757\u77f3\u5934\u73b0\u5728\u4e00\u4e2amove\u5c06\u4f1a\u79fb\u9664\u4e0e\u7f51\u683c\u4e0a\u7684\u53e6\u4e00\u5757\u77f3\u5934\u5171\u4eab\u4e00\u5217\u6216\u4e00\u884c\u7684\u4e00\u4e2a\u77f3\u5934"},"\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5c06\u77f3\u5934\u653e\u7f6e\u5728\u4e00\u4e9b\u6574\u6570\u5750\u6807\u70b9\u4e0a\u3002\u6bcf\u4e2a\u5750\u6807\u70b9\u4e0a\u6700\u591a\u53ea\u80fd\u6709\u4e00\u5757\u77f3\u5934\u3002\u73b0\u5728\uff0c\u4e00\u4e2amove\u5c06\u4f1a\u79fb\u9664\u4e0e\u7f51\u683c\u4e0a\u7684\u53e6\u4e00\u5757\u77f3\u5934\u5171\u4eab\u4e00\u5217\u6216\u4e00\u884c\u7684\u4e00\u4e2a\u77f3\u5934\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int removeStones(vector<vector<int>>& stones) {\n    if(stones.size() <= 1) return 0;\n    int res = stones.size(), len = stones.size();\n    vector<int> p(len,-1);\n    for(int i =0;i < len;i++){\n        for(int j = i+1;j < len;j++){\n            if(stones[j][0] == stones[i][0] || stones[j][1] == stones[i][1])\n                u(p, i, j);\n        }\n    }\n    for(auto e : p){\n        if(e == -1) res--;\n    }\n    return res;\n}\n")),(0,l.kt)("h3",{id:"2\u6709\u5173\u662f\u5bf9\u8fb9dfs\u8fd8\u662f\u70b9dfs"},"2.\u6709\u5173\u662f\u5bf9\u8fb9dfs\u8fd8\u662f\u70b9dfs"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PAT1034")),(0,l.kt)("h5",{id:"\u7ed9\u51fa\u591a\u4e2a\u4eba\u4e4b\u95f4\u7684\u901a\u8bdd\u957f\u5ea6\u6309\u7167\u8fd9\u4e9b\u901a\u8bdd\u5c06\u4ed6\u4eec\u5206\u6210\u82e5\u5e72\u4e2a\u7ec4\u5404\u4e2a\u7ec4\u7684\u603b\u6743\u503c\u662f\u8be5\u7ec4\u5185\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u6bcf\u4e2a\u4eba\u7684\u6743\u503c\u662f\u5176\u53c2\u4e0e\u7684\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u6c42\u7ec4\u6570\u548c\u7ec4\u5185\u901a\u8bdd\u6700\u957f\u7684"},"\u7ed9\u51fa\u591a\u4e2a\u4eba\u4e4b\u95f4\u7684\u901a\u8bdd\u957f\u5ea6\uff0c\u6309\u7167\u8fd9\u4e9b\u901a\u8bdd\u5c06\u4ed6\u4eec\u5206\u6210\u82e5\u5e72\u4e2a\u7ec4\uff0c\u5404\u4e2a\u7ec4\u7684\u603b\u6743\u503c\u662f\u8be5\u7ec4\u5185\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\uff0c\u6bcf\u4e2a\u4eba\u7684\u6743\u503c\u662f\u5176\u53c2\u4e0e\u7684\u6240\u6709\u901a\u8bdd\u957f\u5ea6\u4e4b\u548c\u3002\u6c42\u7ec4\u6570\u548c\u7ec4\u5185\u901a\u8bdd\u6700\u957f\u7684"),(0,l.kt)("p",null,"\u6bcf\u4e2a\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u8fde\u7ebf\uff0c\u6545\u53ef\u4ee5\u5bf9\u8fb9\u641c",(0,l.kt)("inlineCode",{parentName:"p"},"\u6570\u91cf\u5173\u7cfb\u7684\u8fd0\u7528:\u8fb9\u6743\u548c=\u70b9\u6743\u548c/2")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"\u4e4b\u540e\u7684\u64cd\u4f5c--PAT2019\u66257-3 Telefraud Detection")),(0,l.kt)("h5",{id:"\u7535\u4fe1\u8bc8\u9a97\u5224\u65ad\u5acc\u7591\u72af\u82e5\u72af\u4eba\u4e4b\u95f4\u901a\u8fc7\u8bdd\u8bf4\u660e\u662f\u4e00\u4e2a\u56e2\u4f19"},"\u7535\u4fe1\u8bc8\u9a97\u5224\u65ad\u5acc\u7591\u72af,\u82e5\u72af\u4eba\u4e4b\u95f4\u901a\u8fc7\u8bdd\u8bf4\u660e\u662f\u4e00\u4e2a\u56e2\u4f19"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"for(i=1;i<=n;++i)\n    if(sus[i]==1)\n        for(j=i+1;j<=n;++j)\n            if(sus[j]==1&&g[i][j]>0&&g[j][i]>0)uni(i,j);\nw=1;\nfor(i=1;i<=n;++i){\n    if(sus[i]==1){\n        if(mp[findf(i)]==0){\n            mp[findf(i)]=w;\n            gang[w].push_back(i);\n            w++;\n        }//\u5c06\u8054\u901a\u5206\u91cf\u8f6c\u6362\u4e3agang\n        else gang[mp[findf(i)]].push_back(i);\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PAT1021")),(0,l.kt)("h5",{id:"\u7ed9\u5b9an\u4e2a\u7ed3\u70b9\u548cn-1\u6761\u8fb9\u95ee\u80fd\u5426\u6784\u6210\u4e00\u68f5\u6811\u5982\u679c\u80fd\u5219\u8f93\u51fa\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\u65f6\u4f7f\u5f97\u6574\u68f5\u6811\u6df1\u5ea6\u6700\u5927\u7684\u7ed3\u70b9\u5982\u679c\u4e0d\u80fd\u8f93\u51fa\u8fd9\u4e2a\u56fe\u4e2d\u6709\u51e0\u4e2a\u8fde\u901a\u5206\u91cf"},"\u7ed9\u5b9aN\u4e2a\u7ed3\u70b9\u548cN-1\u6761\u8fb9\uff0c\u95ee\u80fd\u5426\u6784\u6210\u4e00\u68f5\u6811\uff0c\u5982\u679c\u80fd\uff0c\u5219\u8f93\u51fa\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\u65f6\u4f7f\u5f97\u6574\u68f5\u6811\u6df1\u5ea6\u6700\u5927\u7684\u7ed3\u70b9\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8f93\u51fa\u8fd9\u4e2a\u56fe\u4e2d\u6709\u51e0\u4e2a\u8fde\u901a\u5206\u91cf\u3002"),(0,l.kt)("p",null,"\u80fd\u5426\u6784\u6210\u6811\uff0c\u8981\u4e48\u6709>1\u4e2a\u8fde\u901a\u5206\u91cf,\u8981\u4e48\u6709\u73af"),(0,l.kt)("h3",{id:"3hamiltonian-cycle"},"3.Hamiltonian Cycle"),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("h5",{parentName:"admonition",id:"1\u662f\u5426\u662fn1\u4e2a\u70b9"},"(1)\u662f\u5426\u662fN+1\u4e2a\u70b9"),(0,l.kt)("h5",{parentName:"admonition",id:"2\u9664\u8d77\u70b9\u5916\u6bcf\u4e2a\u70b9\u662f\u5426\u53ea\u51fa\u73b0\u4e861\u6b21"},"(2)\u9664\u8d77\u70b9\u5916\uff0c\u6bcf\u4e2a\u70b9\u662f\u5426\u53ea\u51fa\u73b0\u4e861\u6b21"),(0,l.kt)("h5",{parentName:"admonition",id:"3\u7ecf\u8fc7\u7684\u8fb9\u662f\u5426\u5b58\u5728"},"(3)\u7ecf\u8fc7\u7684\u8fb9\u662f\u5426\u5b58\u5728"),(0,l.kt)("h5",{parentName:"admonition",id:"4\u8d77\u70b9\u662f\u5426\u7b49\u4e8e\u7ec8\u70b9"},"(4)\u8d77\u70b9\u662f\u5426\u7b49\u4e8e\u7ec8\u70b9")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"\u5254\u9664\u91cd\u590d\u70b9\u65f6\u8981\u7528set(\u5f80\u5f80\u9690\u542b)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'void check(int index) {\n    int sum = 0, cnt, flag = 1;\n    scanf("%d", &cnt);\n    set<int> s;\n    vector<int> v(cnt);\n    for (int i = 0; i < cnt; i++) {\n        scanf("%d", &v[i]);\n        s.insert(v[i]);\n    }\n    for (int i = 0; i < cnt - 1; i++) {\n        if(e[v[i]][v[i+1]] == 0) flag = 0;//3\n        sum += e[v[i]][v[i+1]];\n    }\n    if (flag == 0)\n    printf("Path %d: NA (Not a TS cycle)\\n", index);\n    else if(v[0]!=v[cnt-1]||s.size()!=n)//4,2\n    printf("Path %d: %d (Not a TS cycle)\\n", index, sum);\n    else if(cnt != n + 1)printf("Path %d: %d (TS cycle)\\n", index, sum);//1\n    else printf("Path %d: %d (TS simple cycle)\\n", index, sum);\n}\n')),(0,l.kt)("h3",{id:"4dfs\u7ed3\u6784\u603b\u7ed3"},"4.dfs\u7ed3\u6784\u603b\u7ed3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void dfs(int x){\n    temp.push_back(x);\n    if (pre[x][0] == -1){\n        ......\n    }\n    for(int i=0;i<pre[x].size();i++){\n        dfs(pre[x][i]);\n    }\n    temp.pop_back();\n}\n")))}c.isMDXComponent=!0}}]);