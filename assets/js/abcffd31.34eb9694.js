"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[5529],{6528:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var t=n(7462),r=(n(7294),n(3905));n(1839);const i={},s="Java Application Design--Containers",p={unversionedId:"C++/Java_containers",id:"C++/Java_containers",title:"Java Application Design--Containers",description:"Introduction",source:"@site/docs/C++/Java_containers.md",sourceDirName:"C++",slug:"/C++/Java_containers",permalink:"/docs/C++/Java_containers",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/C++/Java_containers.md",tags:[],version:"current",frontMatter:{},sidebar:"C",previous:{title:"Java Application Design--Class",permalink:"/docs/C++/Java_class"},next:{title:"Java Application Design--Exceptions & IO",permalink:"/docs/C++/Java_exception"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Collection",id:"collection",level:2},{value:"Function",id:"function",level:3},{value:"List",id:"list",level:3},{value:"Set",id:"set",level:3},{value:"Map",id:"map",level:2},{value:"Generics",id:"generics",level:2},{value:"\u673a\u5236",id:"\u673a\u5236",level:3},{value:"Class",id:"class",level:3},{value:"Method",id:"method",level:3},{value:"Type Upper Bounds",id:"type-upper-bounds",level:4},{value:"Convariance",id:"convariance",level:4}],c={toc:l};function m(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"java-application-design--containers"},"Java Application Design--Containers"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Two Containers:",(0,r.kt)("strong",{parentName:"p"},"Collection")," and ",(0,r.kt)("strong",{parentName:"p"},"Map")),(0,r.kt)("p",null,"1.Collection:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"list"),":hold the element in a particular sequence "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"set")),(0,r.kt)("p",null,"2.Map:\nkey-value object pairs\n",(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/20201016212410955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("h2",{id:"collection"},"Collection"),(0,r.kt)("h3",{id:"function"},"Function"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/2020101715285823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/20201016210354543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/2020101621042813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("h3",{id:"list"},"List"),(0,r.kt)("p",null,"1.",(0,r.kt)("strong",{parentName:"p"},"ArrayList"),":implement with an array,slow for inserting and removing."),(0,r.kt)("p",null,"2.",(0,r.kt)("strong",{parentName:"p"},"LinkedList"),":inexpensive insertions and deletions,slow for random access.\n",(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/20201016210913913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"}),"\nDeque","[dek]","--double ended queue\n",(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/20201016211342737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzgwMjMw,size_16,color_FFFFFF,t_70#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("h3",{id:"set"},"Set"),(0,r.kt)("p",null,"1.",(0,r.kt)("strong",{parentName:"p"},"HashSet"),":Objects must also define hashCode()"),(0,r.kt)("p",null,"2.",(0,r.kt)("strong",{parentName:"p"},"TreeSet"),":An ordered Set backed by a tree."),(0,r.kt)("h2",{id:"map"},"Map"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"HashMap")," and ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")),(0,r.kt)("h2",{id:"generics"},"Generics"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\u6ce8\u610f\u65e0\u8bba\u662f\u4ec0\u4e48\u6cdb\u578b\uff0cgetClass()\u5747\u662f\u540c\u4e00\u4e2a")),(0,r.kt)("h3",{id:"\u673a\u5236"},"\u673a\u5236"),(0,r.kt)("p",null,"Java--\u7c7b\u578b\u53c2\u6570(",(0,r.kt)("strong",{parentName:"p"},"Cannot use primitive types"),")\u4f5c\u4e3a\u7c7b\u7684\u6210\u5458\u53d8\u91cf"),(0,r.kt)("p",null,"C++(\u6a21\u677f)--\u6e90\u4ee3\u7801\u7684\u6e90\u4ee3\u7801"),(0,r.kt)("h3",{id:"class"},"Class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class ArrayMap<K, V> {\n  private K[] keys; \n  private V[] values;\n  private int size;\n  public ArrayMap() {\n    keys = (K[]) new Object[100];\n    values = (V[]) new Object[100];\n    size = 0;\n  }\n  ...\n}\n")),(0,r.kt)("h3",{id:"method"},"Method"),(0,r.kt)("h4",{id:"type-upper-bounds"},"Type Upper Bounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static <K extends Comparable<K>, V> K maxKey(ArrayMap<K, V> am) {//Meaning: Any ArrayMap you give me must have actual parameter type that is a subtype of Comparable<T>.\n\n   ...\n        if (k.compareTo(largest) > 0) {\n   ...\n}\n")),(0,r.kt)("h4",{id:"convariance"},"Convariance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ArrayMap<FrenchDog, Integer> am2 = new ArrayMap<FrenchDog, Integer>();\nam2.put(new FrenchDog("francis"), 10);\nam2.put(new FrenchDog("francis jr"), 20);\nallBark(am2);\n// \u5b9e\u73b0allBark\npublic static void allBark(ArrayMap<Dog, ?> am) {\n   for (Dog d : am.keys()) {\n       d.bark();    \n   }\n}\n')),(0,r.kt)("p",null,"Arrays are convariant in java, but generic types are invariant"),(0,r.kt)("p",null,"\u53cd\u8bc1:\nif 2(\u221a) then 4(x) so 2(x)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"List<FrenchDog> fg = new ArrayList<FrenchDog>();\nList<Dog> g = fg;\ng.add(new Dog());\nFrenchDog s = g.get(0);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//\u6b63\u786e\npublic static <K extends Dog> void allBark(ArrayMap<K, ?> am) {\n   for (Dog d : am.keys()) {\n       d.bark();\n   }\n}\n//or \npublic static void allBark(ArrayMap<?extends Dog,?> am){\n    for(Dog d : am.keys()){\n        d.bark();\n    }\n}\n\n")))}m.isMDXComponent=!0}}]);