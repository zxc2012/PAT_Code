"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[3420],{8703:(n,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=t(7462),e=(t(7294),t(3905));t(1839);const r={},o="PAT1141 PAT Ranking of Institutions (25 \u5206)",a={unversionedId:"OJ/PAT1141",id:"OJ/PAT1141",title:"PAT1141 PAT Ranking of Institutions (25 \u5206)",description:"",source:"@site/docs/OJ/PAT1141.md",sourceDirName:"OJ",slug:"/OJ/PAT1141",permalink:"/docs/OJ/PAT1141",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/OJ/PAT1141.md",tags:[],version:"current",frontMatter:{},sidebar:"OJ",previous:{title:"PAT1123 Is It a Complete AVL Tree",permalink:"/docs/OJ/PAT1123"},next:{title:"POJ2456 Aggressive cows",permalink:"/docs/OJ/POJ2456"}},d={},c=[],p={toc:c};function u(n){let{components:s,...t}=n;return(0,e.kt)("wrapper",(0,i.Z)({},p,t,{components:s,mdxType:"MDXLayout"}),(0,e.kt)("h1",{id:"pat1141-pat-ranking-of-institutions-25-\u5206"},"PAT1141 PAT Ranking of Institutions (25 \u5206)"),(0,e.kt)("pre",null,(0,e.kt)("code",{parentName:"pre",className:"language-cpp"},"#include<bits/stdc++.h>\nusing namespace std;\nstruct Node{\n   string s;\n   float tws=0.0;\n   int ns=0;\n   int d;\n};\nvector<Node> v;\nmap<string,int> m;\nbool cmp(Node a,Node b){\n   if((int)a.tws!=(int)b.tws)return (int)a.tws>(int)b.tws;\n   else if(a.ns!=b.ns)return a.ns<b.ns;\n   else return a.s<b.s;\n}\nint main(){\n   int n,i,j,g;\n   char id[7],s[7];\n   scanf(\"%d\",&n);\n   for(i=0;i<n;++i){\n      getchar();\n      scanf(\"%s %d %s\",&id,&g,&s);\n      for(j=0;j<6;++j)s[j]=tolower(s[j]);\n      string ss=s;\n      if(m[ss]==0){\n         m[ss]=v.size()+1;\n         Node y;\n         y.s=ss;\n         if(id[0]=='B')y.tws+=g/1.5;\n         else if(id[0]=='A')y.tws+=g;\n         else y.tws+=g*1.5;\n         y.ns+=1;\n         v.push_back(y);\n      }\n      else{\n         if(id[0]=='B')v[m[ss]-1].tws+=g/1.5;\n         else if(id[0]=='A')v[m[ss]-1].tws+=g;\n         else v[m[ss]-1].tws+=g*1.5;\n         v[m[ss]-1].ns+=1;\n      }          \n   }\n   sort(v.begin(),v.end(),cmp);\n   printf(\"%d\\n\",v.size());\n   for(i=0;i<v.size();++i){\n      v[i].d=i+1;\n      if(i>0&&(int)v[i].tws==(int)v[i-1].tws)v[i].d=v[i-1].d;\n      printf(\"%d %s %d %d\\n\",v[i].d,v[i].s.c_str(),(int)v[i].tws,v[i].ns);\n   }\n   return 0; \n}\n")))}u.isMDXComponent=!0}}]);