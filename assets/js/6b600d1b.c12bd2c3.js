"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[9831],{2959:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>m,toc:()=>a});var i=e(7462),s=(e(7294),e(3905));e(1839);const r={},o="\u4f4d\u8fd0\u7b97\u603b\u7ed3",m={unversionedId:"Algorithms/bit_operation",id:"Algorithms/bit_operation",title:"\u4f4d\u8fd0\u7b97\u603b\u7ed3",description:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",source:"@site/docs/Algorithms/bit_operation.md",sourceDirName:"Algorithms",slug:"/Algorithms/bit_operation",permalink:"/docs/Algorithms/bit_operation",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/Algorithms/bit_operation.md",tags:[],version:"current",frontMatter:{},sidebar:"Algorithms",previous:{title:"7 DP summary",permalink:"/docs/Algorithms/7"},next:{title:"Huffman Tree",permalink:"/docs/Algorithms/greedy"}},u={},a=[{value:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",id:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",level:2},{value:"\u6bcf\u4f4d\u904d\u5386O(n)",id:"\u6bcf\u4f4d\u904d\u5386on",level:3},{value:"\u53ea\u904d\u53861\u7684\u4e2a\u6570O(m)",id:"\u53ea\u904d\u53861\u7684\u4e2a\u6570om",level:3},{value:"Set Mismatch",id:"set-mismatch",level:2}],l={toc:a};function c(n){let{components:t,...e}=n;return(0,s.kt)("wrapper",(0,i.Z)({},l,e,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"\u4f4d\u8fd0\u7b97\u603b\u7ed3"},"\u4f4d\u8fd0\u7b97\u603b\u7ed3"),(0,s.kt)("h2",{id:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"},"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.nowcoder.com/practice/8ee967e43c2c4ec193b040ea7fbb10b8?tpId=13&tqId=11164&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking"},"\u9898\u76ee\u94fe\u63a5")),(0,s.kt)("h3",{id:"\u6bcf\u4f4d\u904d\u5386on"},"\u6bcf\u4f4d\u904d\u5386O(n)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n     int  NumberOf1(int n) {\n         unsigned int flag=1,sum=0;\n         for(int i=0;i<32;++i){\n             sum+=flag&n?1:0;\n             flag<<=1;\n         }\n         return sum;\n     }\n};\n")),(0,s.kt)("h3",{id:"\u53ea\u904d\u53861\u7684\u4e2a\u6570om"},"\u53ea\u904d\u53861\u7684\u4e2a\u6570O(m)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n     int  NumberOf1(int n) {\n         unsigned int sum=0;\n         while(n!=0){\n             n=n&(n-1);\n             sum++;\n         }\n         return sum;\n     }\n};\n")),(0,s.kt)("h2",{id:"set-mismatch"},"Set Mismatch"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/set-mismatch/"},"\u9898\u76ee\u94fe\u63a5")),(0,s.kt)("p",null,"a set of integers 1 to n but got repetition of one number and loss of another number,e.g. ","[1,2,2,4]"),(0,s.kt)("p",null,"find the duplicate and the missing."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u5728\u540e\u9762\u6dfb\u52a01 to n\uff0c\u6784\u5efa3\u4e2aduplicate\u548c1\u4e2amissing,\u7136\u540e\u5728\u6570\u91cf\u4e0a\u505a\u6587\u7ae0")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> findErrorNums(vector<int>& nums) {\n    int sum=0,num1=0,num2=0;\n    int n=nums.size();\n    vector<int> result(2);\n    for(int i=0;i<n;++i){\n        sum^=nums[i];\n        sum^=(i+1);\n    }\n    int low=sum&(-sum);\n    for(int i=0;i<n;++i){\n        if((nums[i]&low)==0)num1^=nums[i];\n        else num2^=nums[i];\n        if(((i+1)&low)==0)num1^=(i+1);\n        else num2^=(i+1);\n    }\n    for(int i=0;i<n;++i){\n        if(nums[i]==num1||nums[i]==num2){\n            result[0]=nums[i];\n            result[1]=nums[i]==num1?num2:num1;\n            break;\n        }\n    }\n    return result;\n}\n")))}c.isMDXComponent=!0}}]);