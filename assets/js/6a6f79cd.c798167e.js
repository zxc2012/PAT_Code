"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[1536],{2321:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>m,toc:()=>i});var n=e(7462),s=(e(7294),e(3905));e(1839);const r={},l="1 Class",m={unversionedId:"C++/Java/Java_1",id:"C++/Java/Java_1",title:"1 Class",description:"Data Types",source:"@site/docs/C++/Java/Java_1.md",sourceDirName:"C++/Java",slug:"/C++/Java/Java_1",permalink:"/docs/C++/Java/Java_1",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/C++/Java/Java_1.md",tags:[],version:"current",frontMatter:{},sidebar:"C",next:{title:"2 Collection",permalink:"/docs/C++/Java/Java_2"}},p={},i=[{value:"Data Types",id:"data-types",level:2},{value:"Primitive Data Types",id:"primitive-data-types",level:3},{value:"Operator precedence",id:"operator-precedence",level:3},{value:"Immutability: <strong>final</strong>",id:"immutability-final",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Pass by value",id:"pass-by-value",level:3},{value:"Object",id:"object",level:2},{value:"Autoboxing(auto-unboxing)",id:"autoboxingauto-unboxing",level:3},{value:"Object Comparison",id:"object-comparison",level:3},{value:"Designing Classes",id:"designing-classes",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Visibility Modifiers",id:"visibility-modifiers",level:3},{value:"Class Import",id:"class-import",level:3},{value:"Order of Initialization",id:"order-of-initialization",level:3},{value:"Cleanup:finalize()",id:"cleanupfinalize",level:3},{value:"Inheritance &amp; Polymorphism",id:"inheritance--polymorphism",level:2},{value:"Inheritance",id:"inheritance",level:3},{value:"Polymorphism",id:"polymorphism",level:3},{value:"Abstract Classes &amp; Interfaces",id:"abstract-classes--interfaces",level:2},{value:"Interfaces",id:"interfaces",level:3},{value:"Abstract Class",id:"abstract-class",level:3},{value:"Anonymous Class",id:"anonymous-class",level:3},{value:"Other Classes",id:"other-classes",level:2},{value:"java.util.Scanner",id:"javautilscanner",level:3},{value:"java.util.Arrays",id:"javautilarrays",level:3},{value:"java.lang.String",id:"javalangstring",level:3}],o={toc:i};function c(a){let{components:t,...e}=a;return(0,s.kt)("wrapper",(0,n.Z)({},o,e,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"1-class"},"1 Class"),(0,s.kt)("h2",{id:"data-types"},"Data Types"),(0,s.kt)("h3",{id:"primitive-data-types"},"Primitive Data Types"),(0,s.kt)("p",null,"C++(ILP32:int long pointer)"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Storage(bits)"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"char"),(0,s.kt)("td",{parentName:"tr",align:null},"8")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"short"),(0,s.kt)("td",{parentName:"tr",align:null},"16")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"int"),(0,s.kt)("td",{parentName:"tr",align:null},"32")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"long"),(0,s.kt)("td",{parentName:"tr",align:null},"32")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"float"),(0,s.kt)("td",{parentName:"tr",align:null},"32")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"long long"),(0,s.kt)("td",{parentName:"tr",align:null},"64")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"double"),(0,s.kt)("td",{parentName:"tr",align:null},"64")))),(0,s.kt)("p",null,"Java"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Storage(bits)"),(0,s.kt)("th",{parentName:"tr",align:null},"Min Value"),(0,s.kt)("th",{parentName:"tr",align:null},"Max Value"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"boolean"),(0,s.kt)("td",{parentName:"tr",align:null},"-"),(0,s.kt)("td",{parentName:"tr",align:null},"-"),(0,s.kt)("td",{parentName:"tr",align:null},"-")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"byte"),(0,s.kt)("td",{parentName:"tr",align:null},"8"),(0,s.kt)("td",{parentName:"tr",align:null},"-128"),(0,s.kt)("td",{parentName:"tr",align:null},"127")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"short"),(0,s.kt)("td",{parentName:"tr",align:null},"16"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"15"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"-2^{15}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"15")))))))))))))),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"15")),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{15}-1")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"15"))))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"))))))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"char"),(0,s.kt)("td",{parentName:"tr",align:null},"16"),(0,s.kt)("td",{parentName:"tr",align:null},"0"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"16")),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{16}-1")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"16"))))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"))))))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"int"),(0,s.kt)("td",{parentName:"tr",align:null},"32"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"31"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"-2^{31}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"31")))))))))))))),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"31")),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"0"),(0,s.kt)("mn",{parentName:"msup"},"9")),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{31}-1(2\\times10^9)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"31"))))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"0"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"9")))))))),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"long"),(0,s.kt)("td",{parentName:"tr",align:null},"64"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"63"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"-2^{63}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"63")))))))))))))),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{parentName:"td",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"63")),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mn",{parentName:"mrow"},"9"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"0"),(0,s.kt)("mn",{parentName:"msup"},"18")),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{63}-1(9\\times10^{18})")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"63"))))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord"},"9"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"0"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"18"))))))))),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"float"),(0,s.kt)("td",{parentName:"tr",align:null},"32"),(0,s.kt)("td",{parentName:"tr",align:null},"Approximately-3.4e+38 with 7 significant digits"),(0,s.kt)("td",{parentName:"tr",align:null},"Approximately3.4e+38 with 7 significant digits")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"double"),(0,s.kt)("td",{parentName:"tr",align:null},"64"),(0,s.kt)("td",{parentName:"tr",align:null},"Approximately-1.7e+308 with 15 significant digits"),(0,s.kt)("td",{parentName:"tr",align:null},"Approximately-1.7e+308 with 15 significant digits")))),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20201013163013271.png",alt:"vs"})),(0,s.kt)("h3",{id:"operator-precedence"},"Operator precedence"),(0,s.kt)("p",null,"\u5355\u7b97\u79fb\u5173\u4e0e\uff0c\u5f02\u6216\u903b\u6761\u8d4b"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5355\u8868\u793a\u5355\u76ee\u8fd0\u7b97\u7b26\uff1a\u903b\u8f91\u975e(!),\u6309\u4f4d\u53d6\u53cd(~),\u81ea\u589e(++),\u81ea\u51cf(--),\u53d6\u5730\u5740(&),\u53d6\u503c(","*",")"),(0,s.kt)("li",{parentName:"ul"},"\u7b97\u8868\u793a\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a\u4e58\u3001\u9664\u548c\u6c42\u4f59(","*",",/,%)\u7ea7\u522b\u9ad8\u4e8e\u52a0\u51cf(+,-)"),(0,s.kt)("li",{parentName:"ul"},"\u79fb\u8868\u793a\u6309\u4f4d\u5de6\u79fb(<<)\u548c\u4f4d\u53f3\u79fb(>>)"),(0,s.kt)("li",{parentName:"ul"},"\u5173\u8868\u793a\u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a\u5927\u5c0f\u5173\u7cfb(>,>=,<,<=)\u7ea7\u522b\u9ad8\u4e8e\u76f8\u7b49\u4e0d\u76f8\u7b49\u5173\u7cfb(==,!=)"),(0,s.kt)("li",{parentName:"ul"},"\u4e0e\u8868\u793a\u6309\u4f4d\u4e0e(&)"),(0,s.kt)("li",{parentName:"ul"},"\u5f02\u8868\u793a\u6309\u4f4d\u5f02\u6216(^)"),(0,s.kt)("li",{parentName:"ul"},"\u6216\u8868\u793a\u6309\u4f4d\u6216(|)"),(0,s.kt)("li",{parentName:"ul"},"\u903b\u8868\u793a\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a\u903b\u8f91\u4e0e(&&)\u7ea7\u522b\u9ad8\u4e8e\u903b\u8f91\u6216(||)"),(0,s.kt)("li",{parentName:"ul"},"\u6761\u8868\u793a\u6761\u4ef6\u8fd0\u7b97\u7b26(? :)"),(0,s.kt)("li",{parentName:"ul"},"\u8d4b\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26(=,+=,-=,","*","=,/=,%=,>>=,<<=,&=,^=, |=,!=)")),(0,s.kt)("h3",{id:"immutability-final"},"Immutability: ",(0,s.kt)("strong",{parentName:"h3"},"final")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Primitive types ensure immutability"),(0,s.kt)("li",{parentName:"ul"},"Declaring a reference as final does not make object immutable")),(0,s.kt)("h3",{id:"initialization"},"Initialization"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Data Field",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"null for a reference type"),(0,s.kt)("li",{parentName:"ul"},"0 for a numeric type"),(0,s.kt)("li",{parentName:"ul"},"false for a boolean type"),(0,s.kt)("li",{parentName:"ul"},"'\\u0000' for a char type"))),(0,s.kt)("li",{parentName:"ul"},"no default value to a local\nvariable")),(0,s.kt)("h3",{id:"pass-by-value"},"Pass by value"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For a parameter of a ",(0,s.kt)("strong",{parentName:"li"},"primitive")," type, the actual value is passed"),(0,s.kt)("li",{parentName:"ul"},"For a parameter of an ",(0,s.kt)("strong",{parentName:"li"},"array")," type, the reference value is passed")),(0,s.kt)("h2",{id:"object"},"Object"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Function"),(0,s.kt)("th",{parentName:"tr",align:null},"Interpretion"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"boolean equals(Object w)"),(0,s.kt)("td",{parentName:"tr",align:null},"\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"String toString()"),(0,s.kt)("td",{parentName:"tr",align:null},"Returns a string representation of the object.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Class<?>getClass()"),(0,s.kt)("td",{parentName:"tr",align:null},"Returns the runtime class of this Object.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"protected Object clone()"),(0,s.kt)("td",{parentName:"tr",align:null},"Creates and returns a copy of this object.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"int\thashCode()"),(0,s.kt)("td",{parentName:"tr",align:null})))),(0,s.kt)("h3",{id:"autoboxingauto-unboxing"},"Autoboxing(auto-unboxing)"),(0,s.kt)("p",null,"Implicit conversions between wrapper/primitives."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"public class BasicArrayList {\n  public static void main(String[] args) {\n    ArrayList<Integer> L = new ArrayList<Integer>();\n    L.add(5);\n    L.add(6);\n    int first = L.get(0);\n  }\n}\n")),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Arrays are never autoboxed/unboxed, e.g. an Integer[] cannot be used in place of an int[] (or vice versa).")),(0,s.kt)("h3",{id:"object-comparison"},"Object Comparison"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"public interface Comparable<T> {\n  public int compareTo(T obj);\n} \npublic interface Comparator<T> {\n    int compare(T o1, T o2);\n}\npublic class Person implements Comparable<Person> {\n  private String mSurname;\n  private int mAge;\n  public int compareTo(Person p) {\n    return mSurname.compareTo(p.mSurname);\n }\n}\npublic class AgeComparator implements Comparator<Person> {\n  public int compare(Person p1, Person p2) {\n    return (p1.mAge-p2.mAge);\n }\n}\nArrayList<Person> plist = ...;\n// \u6cd51: sorts by surname\nCollections.sort(plist); \n// \u6cd52: sorts by age\n// Collections.sort(plist, new AgeComparator());\n")),(0,s.kt)("h2",{id:"designing-classes"},"Designing Classes"),(0,s.kt)("h3",{id:"constructor"},"Constructor"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Constructors must have the same name as the\nclass itself"),(0,s.kt)("li",{parentName:"ul"},"A constructor with no parameters is referred to as\na no-arg constructor(",(0,s.kt)("em",{parentName:"li"},"default"),": no-arg constructor with an\nempty body)"),(0,s.kt)("li",{parentName:"ul"},"Constructors do not have a return type(Not even void)")),(0,s.kt)("p",null,"POJO: plain old java object, sometimes called an Entity"),(0,s.kt)("p",null,"DTO: data transfer object"),(0,s.kt)("h3",{id:"visibility-modifiers"},"Visibility Modifiers"),(0,s.kt)("p",null,"Class level: Only public and (default)"),(0,s.kt)("p",null,"Member level:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"public"),(0,s.kt)("td",{parentName:"tr",align:null},"The member is visible to any class in any package")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"protected"),(0,s.kt)("td",{parentName:"tr",align:null},"default + inheritance")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"(default)"),(0,s.kt)("td",{parentName:"tr",align:null},"By any class in the same package (",(0,s.kt)("em",{parentName:"td"},"aka")," package private)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"private"),(0,s.kt)("td",{parentName:"tr",align:null},"Only by the declaring class")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'//package a;\npublic class Vehicle {\n    protected void drive() {System.out.print("Drive !");}\n    void stop() {System.out.print("Stop !");}\n}\n// package b\n// import a.Vehicle;\npublic class Car extends Vehicle {\n    private void test(Vehicle obj) {\n        obj.drive();// invisible to different package\n        drive(); // compile ok\n        stop(); // invisible to different package\n    }\n}\n')),(0,s.kt)("h3",{id:"class-import"},"Class Import"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The normal import declaration imports classes from packages, allowing them to be used without ",(0,s.kt)("em",{parentName:"li"},"package")," qualification"),(0,s.kt)("li",{parentName:"ul"},"The static import declaration imports static members from classes, allowing them to be used without ",(0,s.kt)("em",{parentName:"li"},"class")," qualification",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Common Scenario: local copies of constants")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"import static java.lang.Math.cos;\ndouble r = cos(PI * theta);\n")),(0,s.kt)("h3",{id:"order-of-initialization"},"Order of Initialization"),(0,s.kt)("p",null,"1.Staic members is to be initialized in the loading of the class,\u5c5e\u4e8e\u7c7b\u7684\u6570\u636e(C++\u5168\u5c40)"),(0,s.kt)("p",null,"2.When a new object is create,\u987a\u5e8f:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Allocate enough storage for an object on the heap."),(0,s.kt)("li",{parentName:"ul"},"Setting ",(0,s.kt)("strong",{parentName:"li"},"all")," the primitives in the object to their default values.(Any initializations that occur at the point of field definition are executed.)"),(0,s.kt)("li",{parentName:"ul"},"Constructors are executed.")),(0,s.kt)("h3",{id:"cleanupfinalize"},"Cleanup:finalize()"),(0,s.kt)("p",null,"When the garbage collector is ready to release the storage used for your object,it will first call its ",(0,s.kt)("strong",{parentName:"p"},"finalize()")," to clean up temporary files, close sockets/connections, etc."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Blocking: pause the program when collecting garbage"),(0,s.kt)("li",{parentName:"ul"},"Incremental: collect in multiple phases and let the program\nrun in the gaps"),(0,s.kt)("li",{parentName:"ul"},"Concurrent: runs concurrently with the program")),(0,s.kt)("p",null,"Compare with C++:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"void UseRawPointer()\n{   \n  MyClass *mc = new MyClass();\n  delete mc;//manually deleted\n}// or auto-deleted when out of scope\n")),(0,s.kt)("p",null,"Problems: "),(0,s.kt)("p",null,"We either forget to delete (memory leak) or we delete multiple\ntimes (crash)"),(0,s.kt)("h2",{id:"inheritance--polymorphism"},"Inheritance & Polymorphism"),(0,s.kt)("h3",{id:"inheritance"},"Inheritance"),(0,s.kt)("p",null,"private\u3001static method cannot be overriden"),(0,s.kt)("p",null,"If a static method defined in the superclass is redefined in a subclass, the method defined in the superclass is ",(0,s.kt)("em",{parentName:"p"},"hidden")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'// \u533a\u5206instance \u548c static method\npublic class BaseClass\n{\n   public void objectAction();\n\n   public static void classAction()\n   {\n      System.out.println("classAction in BaseClass.");\n   }\n}\npublic class DerivedClass extends BaseClass\n{\n   public void objectAction()\n   {\n      this.classAction(); // OK\n   }\n\n   public static void classAction()\n   {\n      //super.objectAction(); // Not OK\n      BaseClass.baseAction();// OK\n   }\n}\npublic class Demo \n{\n   public static void main(String[] args) \n   {\n      DerivedClass derivedObject = new DerivedClass(); \n      BaseClass baseObjectAlias = derivedObject;\n\n      baseObjectAlias.classAction();//classAction in BaseClass. Hide but not override\n}\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Overriding")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Have the same signature"),(0,s.kt)("li",{parentName:"ul"},"Are in different classes related by inheritance")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Overloading")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Have the same name, but different parameter lists"),(0,s.kt)("li",{parentName:"ul"},"Can be either",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"In the same class"),(0,s.kt)("li",{parentName:"ul"},"In different classes related by inheritance")))),(0,s.kt)("p",null,"Eg:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"System.out.println(true?Integer.valueOf(1):Double.valueOf(2))\n//\u8f93\u51fa1.0,\u56e0\u4e3ajava\u662f\u7f16\u8bd1\u8bed\u8a00\u4e0d\u662f\u89e3\u91ca\u8bed\u8a00\uff0c\u7f16\u8bd1\u5668\u770b\u5230\u51fd\u6570\u8c03\u7528\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\n//\u800c\u662f\u6839\u636edouble\u786e\u5b9aprintln overload\u4e3adouble\u7c7b\u578b\n")),(0,s.kt)("h3",{id:"polymorphism"},"Polymorphism"),(0,s.kt)("p",null,"The compiler chooses the most specific matching method signature from the static type of the invoking class"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Static Type: type specified at declaration"),(0,s.kt)("li",{parentName:"ul"},"Dynamic Type: type specified at instantiation(the object being pointed at)"),(0,s.kt)("li",{parentName:"ul"},"dynamic method selection: if dynamic type ",(0,s.kt)("strong",{parentName:"li"},"overide"),"s the method, its method is used instead.")),(0,s.kt)("p",null,"Casting Problem:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Compiler allows method calls based on ",(0,s.kt)("strong",{parentName:"li"},"compile-time"),"(static) type of variable"),(0,s.kt)("li",{parentName:"ul"},"(\u8054\u60f3\u96c6\u5408)To move from a wider type to a narrower type, ",(0,s.kt)("strong",{parentName:"li"},"must")," use casting")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20221028171310.png",alt:"20221028171310"})),(0,s.kt)("h2",{id:"abstract-classes--interfaces"},"Abstract Classes & Interfaces"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"One can implement multiple interfaces, but extend only one class:"),(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("em",{parentName:"p"},"multiple interface inheritance, but single body inheritance."))),(0,s.kt)("h3",{id:"interfaces"},"Interfaces"),(0,s.kt)("p",null,"Interfaces may combine a mix of abstract and default methods."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Unless you use the keyword ",(0,s.kt)("strong",{parentName:"li"},"default"),", a method will be ",(0,s.kt)("strong",{parentName:"li"},"abstract")),(0,s.kt)("li",{parentName:"ul"},"Unless you specify an access modifier, a method will be ",(0,s.kt)("strong",{parentName:"li"},"public"),"(All method declarations in an interface, including default methods, are implicitly public, so you can omit the public modifier.)"),(0,s.kt)("li",{parentName:"ul"},"Can provide variables, but they are ",(0,s.kt)("strong",{parentName:"li"},"public static final"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'public interface Module {\n  double gravity = 6.67e-11;\n  void update(double dt);\n  public default void doSomething() {\n    System.out.println("Do something");\n  }\n}\n// Interface as a data type\nModule[] instances  = new Module[1];\ninstances[0] = new module{\n  void update(double dt){}\n}\n')),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211125105220.png",alt:"20211125105220"})),(0,s.kt)("h3",{id:"abstract-class"},"Abstract Class"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Abstract method(only a signature without implementation)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Abstract class as a data type"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-java"},"GeometricObject[] objects = new GeometricObject[2];\n")))),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211125105246.png",alt:"20211125105246"})),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20221028215331.png",alt:"20221028215331"})),(0,s.kt)("h3",{id:"anonymous-class"},"Anonymous Class"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"R = map(new IntUnaryFunction() {\n  public int apply(int x) { \n    return Math.abs(x); \n  }\n}, some list);\n\n//Equals to\nclass Anonymous implements IntUnaryFunction {\n  public int apply(int x) { \n    return Math.abs(x); \n  }\n}\nR = map(new Anonymous(), some list);\n")),(0,s.kt)("p",null,"Lambda Expression"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A comma-separated list of formal parameters enclosed in parentheses(Optional type declaration)"),(0,s.kt)("li",{parentName:"ul"},"The arrow token, ->"),(0,s.kt)("li",{parentName:"ul"},"A body, which consists of a single expression or a statement block.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"//\u4e00\u4e2a\u53c2\u6570\u65f6()\u53ef\u7701\u7565\n(param1, param2, \u2026, paramN) -> { statements }\n(param1, param2, \u2026, paramN) -> expression\n//\u76f8\u5f53\u4e8e\uff1a(param1, param2, \u2026, paramN) ->{ return expression; }\n\n// Anonymous \u53ef\u4ee5\u6539\u5199\nR = map((int x) -> Math.abs(x), some list);\n// or even better, Method Reference\nR = map(Math::abs, some list);\n")),(0,s.kt)("p",null,"Method Reference"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Reference to a static method",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"ContainingClass::staticMethodName"))),(0,s.kt)("li",{parentName:"ul"},"Reference to an instance method of a particular object",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"containingObject::instanceMethodName\t"))),(0,s.kt)("li",{parentName:"ul"},"Reference to an instance method of an arbitrary object of a particular type",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"String::concat"))),(0,s.kt)("li",{parentName:"ul"},"Reference to a constructor",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"HashSet::new")))),(0,s.kt)("h2",{id:"other-classes"},"Other Classes"),(0,s.kt)("h3",{id:"javautilscanner"},"java.util.Scanner"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"Class Scanner implements Iterator<String>, Closeable{\n  Scanner(InputStream source);\n  // move forward one byte/int, return the one scanned from the input\n  // hasnextByte()/nextByte() \n  // hasnextShort()/nextShort()\n  // hasnextInt()/nextInt()\n  // hasnextLine()/nextLine(), returns the rest of the current line, excluding any line separator at the end\n}\n\nScanner input = new Scanner(System.in);\nint value = input.nextInt();\n")),(0,s.kt)("h3",{id:"javautilarrays"},"java.util.Arrays"),(0,s.kt)("p",null,"get length: (Object you create).length"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"/***Creation****/\nint[] A = new int[4]; // A points to array of 4 0s.\nint[] B; // Same thing, but in two steps.\nB = new int[4];\nint[] C = new int[] { 1, 2, 3, 4 }// Array with explicit initial values.\nint[] D = { 1, 2, 3, 4 } // Shorthand for the above\n/***Method******/\npublic static <T> List<T> asList(T... a)//Returns a fixed-size list backed by the specified array.\npublic static <T> void sort(T[] a,\n            int fromIndex,\n            int toIndex,\n            Comparator<? super T> c)\npublic static boolean equals(Object[] a,\n             Object[] a2)//Returns true if the two specified arrays of Objects are equal to one another.\npublic static void fill(Object[] a,\n        int fromIndex,\n        int toIndex,\n        Object val)\n")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211004215118.png",alt:"20211004215118"})),(0,s.kt)("h3",{id:"javalangstring"},"java.lang.String"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'//Can\'t modify\nClass String{\n  char charAt(int index);\n  String concat(String s1); // Returns a new string that concatenates this string with string s1.\n  static String format\u200b(String format, Object... args);\n  String formatted(Object... args);\n  boolean isEmpty();\n  int indexOf(String str);\n  int length();\n  String substring(int beginIndex, int endIndex);\n  String toUpperCase();//Returns a new string with all letters in uppercase\n  String toLowerCase();\n  String trim();//Returns a string whose value is this string, with any leading and trailing whitespace removed.\n}\n\n// Can modify\nClass StringBuilder implements CharSequence{ \n  StringBuilder(int capacity);\n  StringBuilder(CharSequence seq);//Constructs a string builder that contains the same characters as the specified CharSequence\n  StringBuilder(String str);//Constructs a string builder initialized to the contents of the specified string\n  StringBuilder append(String s);// \u4f1a\u53d8\n  StringBuilder append(char c);// \u4f1a\u53d8\n  StringBuilder append(CharSequence s);// \u4f1a\u53d8\n  char charAt(int index);\n  int length();\n  void setCharAt(int index, char ch);\n  StringBuilder reverse();\n}\n\nint age = 12;\nString formattedString = "Your age is %d".formatted(age);\nString formattedString = String.format("Your age is %d",age);\n\n// ParseInt\nString ageStr = "13";\nage = Integer.parseInt(ageStr);\n')))}c.isMDXComponent=!0}}]);