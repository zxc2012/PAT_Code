"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[5144],{4898:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));a(1839);const i={},l="9 Complex Pipelining",o={unversionedId:"cs/Computer_Architecture/Arch_9",id:"cs/Computer_Architecture/Arch_9",title:"9 Complex Pipelining",description:"Basics",source:"@site/docs/cs/Computer_Architecture/Arch_9.md",sourceDirName:"cs/Computer_Architecture",slug:"/cs/Computer_Architecture/Arch_9",permalink:"/docs/cs/Computer_Architecture/Arch_9",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/cs/Computer_Architecture/Arch_9.md",tags:[],version:"current",frontMatter:{},sidebar:"cs",previous:{title:"8 Cache Coherence & Memory Consistency",permalink:"/docs/cs/Computer_Architecture/Arch_8"},next:{title:"1 Relational Model & SQL",permalink:"/docs/cs/Database/cs186_1"}},s={},c=[{value:"Basics",id:"basics",level:2},{value:"Advanced Data Hazard",id:"advanced-data-hazard",level:3},{value:"In-order and Out-of-order",id:"in-order-and-out-of-order",level:3},{value:"Table for Correct Issue",id:"table-for-correct-issue",level:3},{value:"In-order",id:"in-order",level:2},{value:"Out-of-order",id:"out-of-order",level:2},{value:"Renaming Table",id:"renaming-table",level:3},{value:"Reorder Buffer",id:"reorder-buffer",level:3},{value:"Physical Register Management",id:"physical-register-management",level:3},{value:"Superscalar Register Renaming",id:"superscalar-register-renaming",level:3},{value:"Load-Store Issue",id:"load-store-issue",level:2},{value:"Branch Prediction",id:"branch-prediction",level:2},{value:"BHT",id:"bht",level:3},{value:"Temporal Correlation",id:"temporal-correlation",level:4},{value:"Spatial Correlation",id:"spatial-correlation",level:4},{value:"BTB",id:"btb",level:3}],u={toc:c};function p(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"9-complex-pipelining"},"9 Complex Pipelining"),(0,n.kt)("h2",{id:"basics"},"Basics"),(0,n.kt)("h3",{id:"advanced-data-hazard"},"Advanced Data Hazard"),(0,n.kt)("p",null,"Out-of-order write hazards due to variable latencies of different functional units(FDIV,FMUL takes more than one cycle)"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220513105012.png",alt:"20220513105012"})),(0,n.kt)("h3",{id:"in-order-and-out-of-order"},"In-order and Out-of-order"),(0,n.kt)("p",null,"RAW(red) WAR(purple) WAW(green)"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220513112822.png",alt:"20220513105012"})),(0,n.kt)("p",null,"regrardless of WAR, look for what can be fetched next(dependency), if empty finish execute waiting instruction"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220513120540.png",alt:"20220513105012"})),(0,n.kt)("h3",{id:"table-for-correct-issue"},"Table for Correct Issue"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220519214047.png",alt:"20220519214047"})),(0,n.kt)("h2",{id:"in-order"},"In-order"),(0,n.kt)("p",null,"Assuming: Suppose the instruction is not issued\tby the Issue stage if a RAW\thazard exists or the required FU is busy,and that operands are registered by functional unit on issue"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"NO WAR: Earlier instructions read\ttheir operands at issue",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"no need to keep src1 and src2"))),(0,n.kt)("li",{parentName:"ul"},"still WAW\thazard: e.g. Out-of-order completion",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"WP","[reg#]",",a bit-vector to record the registers for which writes are pending(cleared after WB stage)"),(0,n.kt)("li",{parentName:"ul"},"Busy","[FU#]",",a bit-vector to\tindicate FU\u2019s availability(FU=\tInt,Add,Mult,Div)")))),(0,n.kt)("p",null,"Lookup:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"FU available?\t",(0,n.kt)("em",{parentName:"li"},"Busy","[FU#]")),(0,n.kt)("li",{parentName:"ul"},"RAW? ",(0,n.kt)("em",{parentName:"li"},"WP","[src1]"," or WP","[src2]")),(0,n.kt)("li",{parentName:"ul"},"WAW? ",(0,n.kt)("em",{parentName:"li"},"WP","[dest]"),"\t\t")),(0,n.kt)("p",null,"Example"),(0,n.kt)("p",null,"Diagnol means pipeline"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220519214902.png",alt:"20220519214902"})),(0,n.kt)("p",null,"In-oder issue limitations"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220519215254.png",alt:"20220519215254"})),(0,n.kt)("h2",{id:"out-of-order"},"Out-of-order"),(0,n.kt)("p",null,"Decode adds\tnext instruction to\tbuffer\tif\tthere is space and the instruction does not\tcause a\tWAR\tor WAW hazard.\t"),(0,n.kt)("p",null,"Note: WAR possible again because issue is out-of-order(WAR not possible with in-order issue and registering of input operands at functional unit)\t"),(0,n.kt)("p",null,"Example"),(0,n.kt)("p",null,"Number of Registers limit the number of instructions in\tthe\tpipeline."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220520101336.png",alt:"20220520101336"})),(0,n.kt)("p",null,"Solution: Renaming 5 f4->f4'(no WAW hazard)"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220520103228.png",alt:"20220520103228"})),(0,n.kt)("h3",{id:"renaming-table"},"Renaming Table"),(0,n.kt)("p",null,"Decode does register renaming and adds instructions to the\t issue-stage instruction reorder buffer(ROB)"),(0,n.kt)("p",null,"tag deallocated-> broadcast and some src p1(present) set to 1"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220520111838.png",alt:"20220520111838"})),(0,n.kt)("h3",{id:"reorder-buffer"},"Reorder Buffer"),(0,n.kt)("p",null,"ROB\tmanaged\tcircularly"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"exec bit is set when instruction begins execution")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"When an instruction completes, its use bit is marked free(ptr2 incremented and tag deallocated)"),(0,n.kt)("p",{parentName:"li"},"  ",(0,n.kt)("em",{parentName:"p"},"deallocated also known as commited")))),(0,n.kt)("p",null,"Instruction is candidate for execution when"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"use bit is set"),(0,n.kt)("li",{parentName:"ul"},"p1 and p2 are set "),(0,n.kt)("li",{parentName:"ul"},"has not started execution(exec 0)")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220520112029.png",alt:"20220520112029"})),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/images.gif",alt:"images"})),(0,n.kt)("p",null,"In-Order Commit\tfor\tPrecise\tExceptions"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220522152822.png",alt:"20220522152822"})),(0,n.kt)("h3",{id:"physical-register-management"},"Physical Register Management"),(0,n.kt)("p",null,"Decoding and Despatching all the instructions into ROB first, then go back and execute"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Free List: Physical Register currently available"),(0,n.kt)("li",{parentName:"ul"},"Rd: Architecture Register"),(0,n.kt)("li",{parentName:"ul"},"LPRd: Last Physical Register")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/ROB.gif",alt:"ROB"})),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/Execution.gif",alt:"Execution"})),(0,n.kt)("h3",{id:"superscalar-register-renaming"},"Superscalar Register Renaming"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220522161111.png",alt:"20220522161111"})),(0,n.kt)("h2",{id:"load-store-issue"},"Load-Store Issue"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Store commits\twhen oldest\tinstruction\tand\nboth address and data available:\t\t",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"- clear speculative bit and eventually move data to cache\n"))),(0,n.kt)("li",{parentName:"ul"},"On store abort:clear valid bit")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220522161623.png",alt:"20220522161623"})),(0,n.kt)("p",null,"Conservative Out-of-order Load\tExecution"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220522161722.png",alt:"20220522161722"})),(0,n.kt)("h2",{id:"branch-prediction"},"Branch Prediction"),(0,n.kt)("h3",{id:"bht"},"BHT"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Temporal correlation: The way a branch resolves may\tbe a good predictor of the\tway\tit\twill resolve at\tthe next execution"),(0,n.kt)("li",{parentName:"ul"},"Spatial correlation: Several branches may resolve in a\thighly correlated manner(a preferred path of execution)")),(0,n.kt)("h4",{id:"temporal-correlation"},"Temporal Correlation"),(0,n.kt)("p",null,"One bit Branch history predictor"),(0,n.kt)("p",null,"last fail -> invert the bit"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529165614.png",alt:"20220529165614"})),(0,n.kt)("p",null,"Two bits Branch predictor"),(0,n.kt)("p",null,"Change the prediction after two\tconsecutive\tmis-predictions"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529165814.png",alt:"20220529165814"})),(0,n.kt)("p",null,"Branch History Table"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529165939.png",alt:"20220529165939"})),(0,n.kt)("h4",{id:"spatial-correlation"},"Spatial Correlation"),(0,n.kt)("p",null,"Notion: A History register, records the direction of the last N branches\texecuted by\tthe\tprocessor"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529170306.png",alt:"20220529170306"})),(0,n.kt)("h3",{id:"btb"},"BTB"),(0,n.kt)("p",null,"Limitations of BHT"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529170514.png",alt:"20220529170514"})),(0,n.kt)("p",null,"Branch Target Buffer"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20220529170628.png",alt:"20220529170628"})))}p.isMDXComponent=!0}}]);