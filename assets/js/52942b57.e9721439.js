"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[5343],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},s="Data Models",o={unversionedId:"cs/cs186_2",id:"cs/cs186_2",title:"Data Models",description:"Logical data independence: Maintain views when logical structure changes",source:"@site/docs/cs/cs186_2.md",sourceDirName:"cs",slug:"/cs/cs186_2",permalink:"/docs/cs/cs186_2",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/cs/cs186_2.md",tags:[],version:"current",frontMatter:{},sidebar:"cs",previous:{title:"CS186 Lecture1 --Relational Model & SQL",permalink:"/docs/cs/cs186_1"},next:{title:"Index & Hashing",permalink:"/docs/cs/cs186_3"}},l={},c=[{value:"Key constraints",id:"key-constraints",level:2},{value:"Participation constraints",id:"participation-constraints",level:2},{value:"Weak Entity Set",id:"weak-entity-set",level:2},{value:"Definition",id:"definition",level:2},{value:"ArmStrong&#39;s Axioms",id:"armstrongs-axioms",level:2},{value:"Keys",id:"keys",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"data-models"},"Data Models"),(0,a.kt)("p",null,"Logical data independence: Maintain views when logical structure changes"),(0,a.kt)("p",null,"Phisical data independence: Maintain logical structure when phisical structure changes"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20210506164120.png",alt:"20210506164120"})),(0,a.kt)("h1",{id:"er-model"},"ER Model"),(0,a.kt)("h2",{id:"key-constraints"},"Key constraints"),(0,a.kt)("p",null,"arrow: \u53ef\u4ee5divided(\u4ece\u5c3e\u5230\u5934at most one)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph RL\n\n  id1[Departments]--\x3eid2{Manages};\n  subgraph 1\n    *did*---id1;\n    dname---id1;\n    budget---id1;\n  end\n  id2---id3[Employees];\n  subgraph 2\n    *ssn*---id3;\n    name---id3;\n    lot---id3;\n  end\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"create table manages(\n  ssn char(11),\n  did integer,\n  primary key (did),\n  foreign key (ssn) references Employees,\n  foreign key (did) references Departments\n)\n")),(0,a.kt)("h2",{id:"participation-constraints"},"Participation constraints"),(0,a.kt)("p",null,"\u7c97\u7ebf: Total participation(\u4ece\u5c3e\u5230\u5934at least one)"),(0,a.kt)("p",null,"\u6545\u4ee5\u4e0b\u4ece\u5c3e\u5230\u5934exactly one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph RL\n\n  id1[Departments]==>id2{Manages};\n  subgraph 1\n    *did*---id1;\n    dname---id1;\n    budget---id1;\n  end\n  id2---id3[Employees];\n  subgraph 2\n    *ssn*---id3;\n    name---id3;\n    lot---id3;\n  end\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"create table manages(\n  did integer,\n  dname char(20),\n  budget real,\n  ssn char(11) not null,\n  primary key(did),\n  foreign key (ssn) references Employees on delete no action\n)\n")),(0,a.kt)("h2",{id:"weak-entity-set"},"Weak Entity Set"),(0,a.kt)("p",null,"An entity set that does not have a primary key"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20210512170303.png",alt:"20210512170303"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"create table Dep_Policy(\n  pname char(20),\n  age integer,\n  cost real,\n  ssn char(11) not null,\n  primary key (pname,ssn),\n  foreign key (ssn) references employees on delete cascade\n)\n")),(0,a.kt)("h1",{id:"functional-dependencies"},"Functional Dependencies"),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"Let $R$ be a relation scheme"),(0,a.kt)("p",null,"let $X \\subseteq R$ and $Y \\subseteq R$. "),(0,a.kt)("p",null,"We say that a relation instance $r(R)$ satisfies a functional dependency $X \\rightarrow Y$ if\nfor every pair of tuples $t1 \\in r$ and $t2 \\in r$, if $t1","[X]"," = t2","[X]","$ then $t1","[Y]"," = t2","[Y]","$."),(0,a.kt)("h2",{id:"armstrongs-axioms"},"ArmStrong's Axioms"),(0,a.kt)("p",null,"Reflexivity: If $X \\supseteq Y$, then $X \\rightarrow Y$(",(0,a.kt)("em",{parentName:"p"},"trivial FD"),")"),(0,a.kt)("p",null,"Augmentation: If $X \\rightarrow Y$, then $XZ \\rightarrow YZ$ for any Z."),(0,a.kt)("p",null,"Transitivity: If $X \\rightarrow Y$ and $Y \\rightarrow Z$, then $X \\rightarrow Z$"),(0,a.kt)("p",null,"Union: If $X \\rightarrow Y$ and $X \\rightarrow Z$, then $X \\rightarrow YZ$"),(0,a.kt)("p",null,"Decomposition: If $X \\rightarrow YZ$, then $X \\rightarrow Y$ and $X \\rightarrow Z$"),(0,a.kt)("h2",{id:"keys"},"Keys"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A superkey is a set of attributes $A_1, ..., A_n$ s.t. "),(0,a.kt)("p",{parentName:"li"},"for any other attribute B, we have $A_1, ..., A_n \\rightarrow B$")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A candidate key (or sometimes just key) is a\nminimal superkey"))))}d.isMDXComponent=!0}}]);