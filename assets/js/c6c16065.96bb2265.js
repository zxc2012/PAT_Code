"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[4708],{3785:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=n(7462),i=(n(7294),n(3905)),l=n(1839);const r={},o="3 Exceptions & IO",p={unversionedId:"C++/Java_3",id:"C++/Java_3",title:"3 Exceptions & IO",description:"IO",source:"@site/docs/C++/Java_3.md",sourceDirName:"C++",slug:"/C++/Java_3",permalink:"/docs/C++/Java_3",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/C++/Java_3.md",tags:[],version:"current",frontMatter:{},sidebar:"C",previous:{title:"2 Collection",permalink:"/docs/C++/Java_2"},next:{title:"Files and Memory",permalink:"/docs/C++/\u5185\u5b58\u5206\u914d"}},u={},s=[{value:"IO",id:"io",level:2},{value:"Read a file(Exception)",id:"read-a-fileexception",level:3},{value:"Stream",id:"stream",level:3},{value:"Throwable",id:"throwable",level:2},{value:"Exception",id:"exception",level:2},{value:"The catch mechanism",id:"the-catch-mechanism",level:3},{value:"throw and throws",id:"throw-and-throws",level:3},{value:"throw Inheritance",id:"throw-inheritance",level:3}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"3-exceptions--io"},"3 Exceptions & IO"),(0,i.kt)("h2",{id:"io"},"IO"),(0,i.kt)("h3",{id:"read-a-fileexception"},"Read a file(Exception)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"open the file;(\u5171\u4eab\u6587\u4ef6\u540c\u65f6\u6b63\u5728\u5199)"),(0,i.kt)("li",{parentName:"ol"},"determine its size;"),(0,i.kt)("li",{parentName:"ol"},"allocate that much memory;(JVM64MB)"),(0,i.kt)("li",{parentName:"ol"},"read the file into memory;(\u676d\u5dde\u4e0b\u96e8\u8f6f\u76d8\u5931\u6548)"),(0,i.kt)("li",{parentName:"ol"},"close the file;")),(0,i.kt)("h3",{id:"stream"},"Stream"),(0,i.kt)(l.G,{chart:"graph LR;\n\tDataInputStream--\x3eFilterInputStream;\n\tLineNumberInputStream--\x3eFilterInputStream;\n\tBufferedInputStream--\x3eFilterInputStream;\n\tFilterInputStream--\x3eInputStream;\n\tPipedInputStream--\x3eInputStream;\n\tByteArrayInputStream--\x3eInputStream;\n\tFileInputStream--\x3eInputStream;\n\tDataOutputStream--\x3eFilterOutputStream;\n\tLineNumberOutputStream--\x3eFilterOutputStream;\n\tBufferedOutputStream--\x3eFilterOutputStream;\n\tFilterOutputStream--\x3eOutputStream;\n\tPipedOutputStream--\x3eOutputStream;\n\tByteArrayOutputStream--\x3eOutputStream;\n\tFileOutputStream--\x3eOutputStream;",mdxType:"Mermaid"}),(0,i.kt)("p",null,"DataInputStream:\u4e8c\u8fdb\u5236\u5199\u7684 primitive"),(0,i.kt)("p",null,"LineNumberInputStream:\u4e00\u884c\u884c\u8bfb\u6587\u672c"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"InputStream")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"read()",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"int read()"),(0,i.kt)("li",{parentName:"ul"},"read(byte b[])"),(0,i.kt)("li",{parentName:"ul"},"read(byte b[],int off,int len)"))),(0,i.kt)("li",{parentName:"ul"},"skip(long n)"),(0,i.kt)("li",{parentName:"ul"},"int available()"),(0,i.kt)("li",{parentName:"ul"},"mark()"),(0,i.kt)("li",{parentName:"ul"},"reset()"),(0,i.kt)("li",{parentName:"ul"},"boolean markSupported()"),(0,i.kt)("li",{parentName:"ul"},"close()")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"OutputStream")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"write()",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"write(int b)"),(0,i.kt)("li",{parentName:"ul"},"write(byte b[]);"),(0,i.kt)("li",{parentName:"ul"},"write(byte b[],int off,int len)"))),(0,i.kt)("li",{parentName:"ul"},"flush()"),(0,i.kt)("li",{parentName:"ul"},"close()")),(0,i.kt)("h2",{id:"throwable"},"Throwable"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Throwable implements Serializable{\n    Throwable();\n    Throwable(String message);//Constructs a new throwable with the specified detail message.\n    String getMessage();//Returns the detail message string of this throwable\n    String toString();//Returns a short description of this throwable.\n    void printStackTrace();\n    void printStackTrace(PrintStream s);\n}\n")),(0,i.kt)("h2",{id:"exception"},"Exception"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Checked: Must be Caught or Declared to be Thrown(Green One)"),(0,i.kt)("li",{parentName:"ul"},"Unchecked: no such restrictions(code below compile just fine)")),(0,i.kt)(l.G,{chart:"graph LR;\n\tArithmeticException--\x3eRuntimeException;\n\tClassCastException--\x3eRuntimeException;\n\tIllegalArgumentException--\x3eRuntimeException;\n\tIllegalStateException--\x3eRuntimeException;\n\tIndexOutOfBoundsException--\x3eRuntimeException;\n\tNoSuchElementException--\x3eRuntimeException;\n\tNullPointerException--\x3eRuntimeException;\n\tClassNotFoundException--\x3eException;\n\tCloneNotSupportedException--\x3eException;\n\tid1(IOException)--\x3eException;\n    RuntimeException--\x3eException;\n    Exception--\x3eThrowable;\n    Error--\x3eThrowable;\n\tstyle id1 fill:#0cdf19",mdxType:"Mermaid"}),(0,i.kt)("h3",{id:"the-catch-mechanism"},"The catch mechanism"),(0,i.kt)("p",null,"When an exception is thrown, it descends the call stack."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20221030173316.png",alt:"20221030173316"})),(0,i.kt)("h3",{id:"throw-and-throws"},"throw and throws"),(0,i.kt)("p",null,"You can ",(0,i.kt)("em",{parentName:"p"},"claim")," to throw an Exception that you really don't."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Otherwise if you \u5728 f()\u5185 throw \u522b\u7684\u5f02\u5e38\u7f16\u8bd1\u4e0d\u901a\u8fc7.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Anyone call your funcition must catch it or throws again."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'throw new Exception("Help");//\u7948\u4f7f\u53e5\nclass SException extends Exception{}//\u9648\u8ff0\u53e5\u4e09\u5355\npublic void f()throws SException,IOExption{}//\u9648\u8ff0\u53e5\u4e09\u5355\n')),(0,i.kt)("h3",{id:"throw-inheritance"},"throw Inheritance"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570:\u7236\u7c7b\u548c\u63a5\u53e3\u7684\u4ea4\u96c6")),(0,i.kt)("p",null,"When you overide a method, you can only throw the exceptions that have beeen specified in the ",(0,i.kt)("em",{parentName:"p"},"base-class")," version of the method."),(0,i.kt)("p",null,"\u53cd\u8bc1: Polymorphism"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class A {\n    void f()throws A;\n}\nclass B{\n    void f()throws A,B;\n}\nvoid process(A p){\n    try{\n        p.f();//Compile\u8fc7\u800cRun Time error,throw B\u65f6A.f()\u4f1a\u6355\u6349\u4e0d\u5230\n    }catch(A a){\n\n    }\n}\nprocess(new B())\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6784\u9020\u65b9\u6cd5:\u7236\u7c7b\u7684\u8d85\u96c6")),(0,i.kt)("p",null,"\u56e0\u4e3a\u6784\u9020\u65b9\u6cd5\u91cc\u9690\u542b\u8c03\u7528\u4e86 super(); address\u4e86\u7236\u7c7b\u53ef\u4ee5\u518d\u52a0\u81ea\u5df1\u7684"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class BaseballException extends Exception{}\nclass Foul extends BaseballException{}\nclass Strike extends BaseballException{}\n\nabstract class Inning{\n    Inning() throws BaseballException{}\n    abstract void atBat() throws Strike, Foul;\n    void walk(){} \n}\n\nclass RainedOut extends Exception{}\nclass PopFoul extends Foul{}\n\ninterface Storm{\n    void event()throws RainedOut;\n}\n\npublic class StormInning extends Inning implements Storm{\n    StormInning() throws RainedOut,BaseballException;\n    StormInning(String s) throws Foul,BaseballException;\n    void walk()throws PopFoul{}// Compile Error\n    void atBat()throws PopFoul{} // call stack, ok\n}\n")))}m.isMDXComponent=!0}}]);