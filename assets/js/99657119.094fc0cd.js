"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[5224],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>s});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),c=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},u=function(t){var e=c(t.components);return n.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=c(r),s=a,g=m["".concat(p,".").concat(s)]||m[s]||d[s]||o;return r?n.createElement(g,l(l({ref:e},u),{},{components:r})):n.createElement(g,l({ref:e},u))}));function s(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8602:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={},l="pytorch\u5165\u95e8",i={unversionedId:"AI/pytorch",id:"AI/pytorch",title:"pytorch\u5165\u95e8",description:"|Data type|\tdtype|\tTensor type|",source:"@site/docs/AI/pytorch.md",sourceDirName:"AI",slug:"/AI/pytorch",permalink:"/docs/AI/pytorch",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/AI/pytorch.md",tags:[],version:"current",frontMatter:{},sidebar:"AI",previous:{title:"Google\u673a\u5668\u5b66\u4e60\u5165\u95e8--Pandas \u7b80\u4ecb",permalink:"/docs/AI/google_1"}},p={},c=[],u={toc:c};function d(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pytorch\u5165\u95e8"},"pytorch\u5165\u95e8"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Data type"),(0,a.kt)("th",{parentName:"tr",align:null},"dtype"),(0,a.kt)("th",{parentName:"tr",align:null},"Tensor type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float32 or torch.float"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.FloatTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"64-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float64 or torch.double"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.DoubleTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float16 or torch.half"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.HalfTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8-bit integer (unsigned)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.uint8"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.ByteTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int8"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.CharTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int16 or torch.short"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.ShortTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int32 or torch.int"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.IntTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"64-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int64 or torch.long"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.LongTensor")))))}d.isMDXComponent=!0}}]);