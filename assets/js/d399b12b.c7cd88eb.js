"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[3242],{6951:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var n=i(7462),s=(i(7294),i(3905));i(8209);const l={},o="1 OOP",r={unversionedId:"SDE/oop",id:"SDE/oop",title:"1 OOP",description:"Solid Principles",source:"@site/docs/SDE/oop.md",sourceDirName:"SDE",slug:"/SDE/oop",permalink:"/docs/SDE/oop",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/SDE/oop.md",tags:[],version:"current",frontMatter:{},sidebar:"SDE",previous:{title:"experience",permalink:"/docs/SDE/experience"}},a={},c=[{value:"Solid Principles",id:"solid-principles",level:2},{value:"UML",id:"uml",level:2}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"1-oop"},"1 OOP"),(0,s.kt)("h2",{id:"solid-principles"},"Solid Principles"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Single-responsibility principle: Every class should have only one responsibility"),(0,s.kt)("li",{parentName:"ul"},"Open\u2013closed principle: Classes should be open for extension, but closed for modification"),(0,s.kt)("li",{parentName:"ul"},"Liskov substitution: Every subclass or derived class should be substitutable for their base or parent class(obey the rules)"),(0,s.kt)("li",{parentName:"ul"},"Interface segregation: Interfaces should not force classes to implement what they can't do. Large interfaces should be devided into small ones"),(0,s.kt)("li",{parentName:"ul"},"Dependency inversion: Abstractions should not depend on details. Details (concrete implementations) should depend on abstractions")),(0,s.kt)("h2",{id:"uml"},"UML"),(0,s.kt)("p",null,"Unified Modeling Language"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20211005144832.png",alt:"20211005144832"})),(0,s.kt)("p",null,"N Tier Architecture"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"API layer: Controller"),(0,s.kt)("li",{parentName:"ul"},"Business Layer: Service"),(0,s.kt)("li",{parentName:"ul"},"DAO: Data Access Object")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/zxc2012/image/main/20230416214548.png",alt:"20230416214548"})))}u.isMDXComponent=!0}}]);