"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[3669],{8545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>o});var a=n(7462),l=(n(7294),n(3905));n(1839);const s={},r="Google Tensorflow\u7ec3\u4e60",p={unversionedId:"AI/google2",id:"AI/google2",title:"Google Tensorflow\u7ec3\u4e60",description:"\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7ec3\u4e60\u4e2d\u7684\u5e38\u7528\u8d85\u53c2\u6570",source:"@site/docs/AI/google2.md",sourceDirName:"AI",slug:"/AI/google2",permalink:"/docs/AI/google2",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/AI/google2.md",tags:[],version:"current",frontMatter:{},sidebar:"AI",previous:{title:"GPU",permalink:"/docs/AI/config"},next:{title:"pytorch\u5165\u95e8",permalink:"/docs/AI/pytorch"}},i={},o=[{value:"\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7ec3\u4e60\u4e2d\u7684\u5e38\u7528\u8d85\u53c2\u6570",id:"\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7ec3\u4e60\u4e2d\u7684\u5e38\u7528\u8d85\u53c2\u6570",level:2},{value:"Description",id:"description",level:2},{value:"Code",id:"code",level:2},{value:"\u7528heatmap\u5206\u6790PM2.5\u7684\u5f71\u54cd\u6210\u5206",id:"\u7528heatmap\u5206\u6790pm25\u7684\u5f71\u54cd\u6210\u5206",level:3},{value:"\u68af\u5ea6\u4e0b\u964d\u6cd5",id:"\u68af\u5ea6\u4e0b\u964d\u6cd5",level:3},{value:"Result",id:"result",level:4}],d={toc:o};function f(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"google-tensorflow\u7ec3\u4e60"},"Google Tensorflow\u7ec3\u4e60"),(0,l.kt)("h2",{id:"\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7ec3\u4e60\u4e2d\u7684\u5e38\u7528\u8d85\u53c2\u6570"},"\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7ec3\u4e60\u4e2d\u7684\u5e38\u7528\u8d85\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"steps\uff1a\u8bad\u7ec3\u8fed\u4ee3\u7684\u603b\u6b21\u6570\u3002\u4e00\u6b65\u8ba1\u7b97\u4e00\u6279\u6837\u672c\u4ea7\u751f\u7684\u635f\u5931\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u503c\u4fee\u6539\u4e00\u6b21\u6a21\u578b\u7684\u6743\u91cd\u3002"),(0,l.kt)("li",{parentName:"ul"},"batch size\uff1a\u5355\u6b65\u7684\u6837\u672c\u6570\u91cf\uff08\u968f\u673a\u9009\u62e9\uff09\u3002\u4f8b\u5982\uff0cSGD \u7684\u6279\u6b21\u5927\u5c0f\u4e3a 1\u3002")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4ee5\u4e0b\u516c\u5f0f\u6210\u7acb:")),(0,l.kt)("p",null,"total_number_of_trained_examples=batch_size*steps"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"periods\uff1a\u63a7\u5236\u62a5\u544a\u7684\u7c92\u5ea6\u3002\u4f8b\u5982\uff0c\u5982\u679c periods \u8bbe\u4e3a 7 \u4e14 steps \u8bbe\u4e3a 70\uff0c\u5219\u7ec3\u4e60\u5c06\u6bcf 10 \u6b65\u8f93\u51fa\u4e00\u6b21\u635f\u5931\u503c\uff08\u5373 7 \u6b21\uff09\u3002\u4e0e\u8d85\u53c2\u6570\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u60a8\u4fee\u6539 periods \u7684\u503c\u3002\u8bf7\u6ce8\u610f\uff0c\u4fee\u6539 periods \u4e0d\u4f1a\u66f4\u6539\u6a21\u578b\u6240\u5b66\u4e60\u7684\u89c4\u5f8b\u3002")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4ee5\u4e0b\u516c\u5f0f\u6210\u7acb\uff1a")),(0,l.kt)("p",null,"number_of_training_examples_in_each_period=batch_size*steps/periods"),(0,l.kt)("h1",{id:"\u674e\u5b8f\u6bc52019\u673a\u5668\u5b66\u4e60hw1"},"\u674e\u5b8f\u6bc52019\u673a\u5668\u5b66\u4e60hw1"),(0,l.kt)("h2",{id:"description"},"Description"),(0,l.kt)("p",null,"\u672c\u6b21\u4f5c\u696d\u7684\u8cc7\u6599\u662f\u5f9e\u884c\u653f\u9662\u74b0\u5883\u74b0\u4fdd\u7f72\u7a7a\u6c23\u54c1\u8cea\u76e3\u6e2c\u7db2\u6240\u4e0b\u8f09\u7684\u89c0\u6e2c\u8cc7\u6599\u3002\n\u5e0c\u671b\u5927\u5bb6\u80fd\u5728\u672c\u4f5c\u696d\u5be6\u4f5c linear regression \u9810\u6e2c\u51faPM2.5\u7684\u6578\u503c\u3002"),(0,l.kt)("p",null,"\u672c\u6b21\u4f5c\u696d\u4f7f\u7528\u8c50\u539f\u7ad9\u7684\u89c0\u6e2c\u8a18\u9304\uff0c\u5206\u6210train set\u8ddftest set\uff0ctrain set\u662f\u8c50\u539f\u7ad9\u6bcf\u500b\u6708\u7684\u524d20\u5929\u6240\u6709\u8cc7\u6599\u3002test set\u5247\u662f\u5f9e\u8c50\u539f\u7ad9\u5269\u4e0b\u7684\u8cc7\u6599\u4e2d\u53d6\u6a23\u51fa\u4f86\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"train.csv: \u6bcf\u500b\u6708\u524d20\u5929\u7684\u5b8c\u6574\u8cc7\u6599\u3002"),(0,l.kt)("li",{parentName:"ul"},"test.csv : \u5f9e\u5269\u4e0b\u7684\u8cc7\u6599\u7576\u4e2d\u53d6\u6a23\u51fa\u9023\u7e8c\u768410\u5c0f\u6642\u70ba\u4e00\u7b46\uff0c\u524d\u4e5d\u5c0f\u6642\u7684\u6240\u6709\u89c0\u6e2c\u6578\u64da\u7576\u4f5cfeature\uff0c\u7b2c\u5341\u5c0f\u6642\u7684PM2.5\u7576\u4f5canswer\u3002")),(0,l.kt)("p",null,"\u4e00\u5171\u53d6\u51fa240\u7b46\u4e0d\u91cd\u8907\u7684test data\uff0c\u8acb\u6839\u64dafeauure\u9810\u6e2c\u9019240\u7b46\u7684PM2.5\u3002"),(0,l.kt)("h2",{id:"code"},"Code"),(0,l.kt)("h3",{id:"\u7528heatmap\u5206\u6790pm25\u7684\u5f71\u54cd\u6210\u5206"},"\u7528heatmap\u5206\u6790PM2.5\u7684\u5f71\u54cd\u6210\u5206"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"'''\n\u8bfb\u53d6\u6570\u636e,\u9884\u5904\u7406\n3600=3200 400\n'''\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ntrain_data=pd.read_csv('train.csv',usecols=range(2,27))\ntrain_data=train_data.replace('NR',0)\ntrain_data=np.array(train_data)\nnew=np.empty((18,1))\nfor i in range(0,4320,18):\n    new=np.concatenate((new,train_data[i:i+18,1:]),axis=1)\nnew=new[:,1:].T\ntemp={}\nfor i in range(18):\n    temp[train_data[i,0]]=new[:,i]\nnew=pd.DataFrame(temp,dtype=float)\ncr=new.corr()\nsns.heatmap(cr,mask=cr<0.4)#,annot=True)\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"notes:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"1.\u9884\u5904\u7406")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"2.\u6570\u7ec4\u7ef4\u5ea6\u4e00\u81f4\uff0c\u884c\u5217\u5411\u91cf\u7684\u8f6c\u6362"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s2.ax1x.com/2020/02/20/3Z5ZDJ.jpg",alt:"heatmap"})),(0,l.kt)("h3",{id:"\u68af\u5ea6\u4e0b\u964d\u6cd5"},"\u68af\u5ea6\u4e0b\u964d\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"'''\n\u8bfb\u53d6\u6570\u636e,\u9884\u5904\u7406\n3600=3200 400\n'''\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ntrain_data=pd.read_csv('E:/Git_Code/py/ml2019/train.csv',usecols=range(3,27))\ntrain_data=train_data.replace('NR',0)\ntrain_data=np.array(train_data)\ntrain_data=np.array(train_data).astype(float)\n'''\n\u521d\u6b65\u7ed3\u8bba:\nWS_HR,PM10,NO\n'''\nlr=0.01\nmy_feature,my_targets=[],[]\nfor i in range(0,4320,18):\n    for j in range(15):\n        # use_f=train_data[[i+4,i+8,i+17],j:j+9]\n        use_f=train_data[i+9,j:j+9]\n        use_t=train_data[i+9,j+9]\n        my_feature.append(use_f)\n        my_targets.append(use_t)\nmy_feature=np.array(my_feature)\nmy_targets=np.array(my_targets)\ntrain_f,test_f=my_feature[0:3300],my_feature[3300:]\ntrain_t,test_t=my_targets[0:3300],my_targets[3300:]\n'''\n\u66f4\u65b0\n'''\ndef update(feature,targets,steps):\n    #init\n    n=np.size(targets)#sample\n    b=0\n    b_diff=0\n    beta=0.012\n    m=np.size(feature,1)#input_feature\n    w=np.zeros(m)\n    w_diff=np.zeros(m)\n    print(\"sample:\",n,\"tait:\",m)\n    losses=[]\n    for x in range(steps):\n        loss=0\n        for i in range(m):\n            for j in range(n):\n                w_diff[i] -= feature[j,i]*(targets[j]-b-w.dot(feature[j,:]))\n            w_diff[i] += beta*w[i]\n            w_diff[i]/=n\n        for j in range(n):\n            b_diff-=targets[j]-b-w.dot(feature[j,:])\n            loss+=(targets[j]-b-w.dot(feature[j,:]))**2\n        b_diff/=n\n        loss+=np.sum(np.square(w))\n        loss/=n\n        losses.append(loss)\n        w_diff_2=np.sqrt(np.sum(w_diff*w_diff))\n        b_diff_2=np.sqrt(np.sum(b_diff*b_diff))\n        w-=lr*w_diff/w_diff_2\n        b-=lr*b_diff\n        ## count loss\n        if x%100==0:\n            print(\"after {} epochs,Loss is\".format(x),loss)\n    ## plot\n    plt.figure()\n    plt.plot(losses)\n    plt.xlabel(\"periods\")\n    plt.ylabel(\"Loss\")\n    plt.title(\"learing rate:{} beta:{}\".format(lr,beta))\ndef main():\n    update(train_f,train_t,700)\n    update(test_f,test_t,500)\n    plt.show()\nif __name__=='__main__':   \n    main()\n")),(0,l.kt)("h4",{id:"result"},"Result"),(0,l.kt)("p",null,"\u753b\u66f2\u7ebf\u603b\u7ed3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"class Drawtest():\n    #\u51fd\u6570\u5f00\u59cb\u65f6\u521b\u5efa\u76db\u653eloss\u4e0eacc\u7684\u5bb9\u5668\n    def __init__(self):\n        self.color = {}\n        self.color[0]='r'\n        self.color[1]='g'\n        self.color[2]='k'\n        self.color[3]='m'\n        self.text = {}\n        self.text[0]='CNN-Res'\n        self.text[1]='FL-CNN-Res'\n        self.text[2]='FL-CNN-RC'\n        self.text[3]='FL-CNN-RC2'\n \n    #\u7ed8\u56fe\uff0c\u8fd9\u91cc\u628a\u6bcf\u4e00\u79cd\u66f2\u7ebf\u90fd\u5355\u72ec\u7ed8\u56fe\uff0c\u82e5\u60f3\u628a\u5404\u79cd\u66f2\u7ebf\u7ed8\u5236\u5728\u4e00\u5f20\u56fe\u4e0a\u7684\u8bdd\u53ef\u4fee\u6539\u6b64\u65b9\u6cd5\n    def draw_p(self, lists, label, type,num):\n        plt.plot(range(len(lists)), lists, self.color[num], label=self.text[num])\n        plt.ylabel(label)\n        plt.xlabel('epoch')\n        plt.title(type+label)\n        plt.legend(loc=\"upper right\")\n        if label=='loss' and type =='train_epoch':\n            self.ax1=plt.gca()\n        else:\n            self.ax2=plt.gca()\n        plt.savefig('model/'+type+'_'+label+'.jpg')\n\n    def end_draw(self,num,acc,loss):\n        if num ==0 :\n            plt.figure()\n        else:\n            plt.sca(self.ax1)   \n        self.draw_p(loss, 'loss', 'train_epoch',num)\n        if num ==0 :\n            plt.figure()\n        else:\n            plt.sca(self.ax2)   \n        self.draw_p(acc, 'acc', 'train_epoch',num)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s2.ax1x.com/2020/02/20/3e656A.jpg",alt:"result"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://s2.ax1x.com/2020/02/20/3ecUBt.png",alt:"result1"})))}f.isMDXComponent=!0}}]);