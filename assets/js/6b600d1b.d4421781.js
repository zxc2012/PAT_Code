"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[9831],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(t),f=i,d=p["".concat(l,".").concat(f)]||p[f]||m[f]||o;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=p;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2959:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const o={},a="\u4f4d\u8fd0\u7b97\u603b\u7ed3",u={unversionedId:"Algorithms/bit_operation",id:"Algorithms/bit_operation",title:"\u4f4d\u8fd0\u7b97\u603b\u7ed3",description:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",source:"@site/docs/Algorithms/bit_operation.md",sourceDirName:"Algorithms",slug:"/Algorithms/bit_operation",permalink:"/docs/Algorithms/bit_operation",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/Algorithms/bit_operation.md",tags:[],version:"current",frontMatter:{},sidebar:"Algorithms",previous:{title:"7 DP summary",permalink:"/docs/Algorithms/7"},next:{title:"Huffman Tree",permalink:"/docs/Algorithms/greedy"}},l={},s=[{value:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",id:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",level:2},{value:"\u6bcf\u4f4d\u904d\u5386O(n)",id:"\u6bcf\u4f4d\u904d\u5386on",level:3},{value:"\u53ea\u904d\u53861\u7684\u4e2a\u6570O(m)",id:"\u53ea\u904d\u53861\u7684\u4e2a\u6570om",level:3},{value:"Set Mismatch",id:"set-mismatch",level:2}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u4f4d\u8fd0\u7b97\u603b\u7ed3"},"\u4f4d\u8fd0\u7b97\u603b\u7ed3"),(0,i.kt)("h2",{id:"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"},"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nowcoder.com/practice/8ee967e43c2c4ec193b040ea7fbb10b8?tpId=13&tqId=11164&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking"},"\u9898\u76ee\u94fe\u63a5")),(0,i.kt)("h3",{id:"\u6bcf\u4f4d\u904d\u5386on"},"\u6bcf\u4f4d\u904d\u5386O(n)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n     int  NumberOf1(int n) {\n         unsigned int flag=1,sum=0;\n         for(int i=0;i<32;++i){\n             sum+=flag&n?1:0;\n             flag<<=1;\n         }\n         return sum;\n     }\n};\n")),(0,i.kt)("h3",{id:"\u53ea\u904d\u53861\u7684\u4e2a\u6570om"},"\u53ea\u904d\u53861\u7684\u4e2a\u6570O(m)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n     int  NumberOf1(int n) {\n         unsigned int sum=0;\n         while(n!=0){\n             n=n&(n-1);\n             sum++;\n         }\n         return sum;\n     }\n};\n")),(0,i.kt)("h2",{id:"set-mismatch"},"Set Mismatch"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/set-mismatch/"},"\u9898\u76ee\u94fe\u63a5")),(0,i.kt)("p",null,"a set of integers 1 to n but got repetition of one number and loss of another number,e.g. ","[1,2,2,4]"),(0,i.kt)("p",null,"find the duplicate and the missing."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u5728\u540e\u9762\u6dfb\u52a01 to n\uff0c\u6784\u5efa3\u4e2aduplicate\u548c1\u4e2amissing,\u7136\u540e\u5728\u6570\u91cf\u4e0a\u505a\u6587\u7ae0")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> findErrorNums(vector<int>& nums) {\n    int sum=0,num1=0,num2=0;\n    int n=nums.size();\n    vector<int> result(2);\n    for(int i=0;i<n;++i){\n        sum^=nums[i];\n        sum^=(i+1);\n    }\n    int low=sum&(-sum);\n    for(int i=0;i<n;++i){\n        if((nums[i]&low)==0)num1^=nums[i];\n        else num2^=nums[i];\n        if(((i+1)&low)==0)num1^=(i+1);\n        else num2^=(i+1);\n    }\n    for(int i=0;i<n;++i){\n        if(nums[i]==num1||nums[i]==num2){\n            result[0]=nums[i];\n            result[1]=nums[i]==num1?num2:num1;\n            break;\n        }\n    }\n    return result;\n}\n")))}m.isMDXComponent=!0}}]);