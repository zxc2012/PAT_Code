"use strict";(self.webpackChunkChance=self.webpackChunkChance||[]).push([[5224],{8602:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));r(1839);const l={},o="pytorch\u5165\u95e8",i={unversionedId:"AI/pytorch",id:"AI/pytorch",title:"pytorch\u5165\u95e8",description:"|Data type|\tdtype|\tTensor type|",source:"@site/docs/AI/pytorch.md",sourceDirName:"AI",slug:"/AI/pytorch",permalink:"/docs/AI/pytorch",draft:!1,editUrl:"https://github.com/zxc2012/zxc2012.github.io/tree/master/docs/AI/pytorch.md",tags:[],version:"current",frontMatter:{},sidebar:"AI",previous:{title:"Google\u673a\u5668\u5b66\u4e60\u5165\u95e8--Pandas \u7b80\u4ecb",permalink:"/docs/AI/google_1"}},p={},d=[],c={toc:d};function h(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pytorch\u5165\u95e8"},"pytorch\u5165\u95e8"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Data type"),(0,a.kt)("th",{parentName:"tr",align:null},"dtype"),(0,a.kt)("th",{parentName:"tr",align:null},"Tensor type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float32 or torch.float"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.FloatTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"64-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float64 or torch.double"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.DoubleTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16-bit floating point"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.float16 or torch.half"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.HalfTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8-bit integer (unsigned)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.uint8"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.ByteTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int8"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.CharTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int16 or torch.short"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.ShortTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int32 or torch.int"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.IntTensor")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"64-bit integer (signed)"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.int64 or torch.long"),(0,a.kt)("td",{parentName:"tr",align:null},"torch.*.LongTensor")))))}h.isMDXComponent=!0}}]);